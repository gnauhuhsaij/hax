{"ast":null,"code":"\"use strict\";\n\nclass GpuParticleContainerAdaptor {\n  execute(particleContainerPop, container) {\n    const renderer = particleContainerPop.renderer;\n    const shader = container.shader || particleContainerPop.defaultShader;\n    shader.groups[0] = renderer.renderPipes.uniformBatch.getUniformBindGroup(particleContainerPop.localUniforms, true);\n    shader.groups[1] = renderer.texture.getTextureBindGroup(container.texture);\n    const state = particleContainerPop.state;\n    const buffer = particleContainerPop.getBuffers(container);\n    renderer.encoder.draw({\n      geometry: buffer.geometry,\n      shader: container.shader || particleContainerPop.defaultShader,\n      state,\n      size: container.particleChildren.length * 6\n    });\n  }\n}\nexport { GpuParticleContainerAdaptor };","map":{"version":3,"names":["GpuParticleContainerAdaptor","execute","particleContainerPop","container","renderer","shader","defaultShader","groups","renderPipes","uniformBatch","getUniformBindGroup","localUniforms","texture","getTextureBindGroup","state","buffer","getBuffers","encoder","draw","geometry","size","particleChildren","length"],"sources":["/Users/huangjiashu/Desktop/AI Projects/node_modules/pixi.js/src/scene/particle-container/gpu/GpuParticleContainerAdaptor.ts"],"sourcesContent":["import type { WebGPURenderer } from '../../../rendering/renderers/gpu/WebGPURenderer';\nimport type { ParticleContainer } from '../shared/ParticleContainer';\nimport type { ParticleContainerAdaptor, ParticleContainerPipe } from '../shared/ParticleContainerPipe';\n\nexport class GpuParticleContainerAdaptor implements ParticleContainerAdaptor\n{\n    public execute(particleContainerPop: ParticleContainerPipe, container: ParticleContainer)\n    {\n        const renderer = particleContainerPop.renderer as WebGPURenderer;\n\n        const shader = container.shader || particleContainerPop.defaultShader;\n\n        shader.groups[0] = renderer.renderPipes.uniformBatch.getUniformBindGroup(particleContainerPop.localUniforms, true);\n\n        shader.groups[1] = renderer.texture.getTextureBindGroup(container.texture);\n\n        const state = particleContainerPop.state;\n\n        const buffer = particleContainerPop.getBuffers(container);\n\n        renderer.encoder.draw({\n            geometry: buffer.geometry,\n            shader: container.shader || particleContainerPop.defaultShader,\n            state,\n            size: container.particleChildren.length * 6,\n        });\n    }\n}\n"],"mappings":";;AAIO,MAAMA,2BACb;EACWC,QAAQC,oBAAA,EAA6CC,SAC5D;IACI,MAAMC,QAAA,GAAWF,oBAAqB,CAAAE,QAAA;IAEhC,MAAAC,MAAA,GAASF,SAAU,CAAAE,MAAA,IAAUH,oBAAqB,CAAAI,aAAA;IAEjDD,MAAA,CAAAE,MAAA,CAAO,CAAC,CAAI,GAAAH,QAAA,CAASI,WAAA,CAAYC,YAAa,CAAAC,mBAAA,CAAoBR,oBAAqB,CAAAS,aAAA,EAAe,IAAI;IAEjHN,MAAA,CAAOE,MAAA,CAAO,CAAC,IAAIH,QAAA,CAASQ,OAAQ,CAAAC,mBAAA,CAAoBV,SAAA,CAAUS,OAAO;IAEzE,MAAME,KAAA,GAAQZ,oBAAqB,CAAAY,KAAA;IAE7B,MAAAC,MAAA,GAASb,oBAAqB,CAAAc,UAAA,CAAWb,SAAS;IAExDC,QAAA,CAASa,OAAA,CAAQC,IAAK;MAClBC,QAAA,EAAUJ,MAAO,CAAAI,QAAA;MACjBd,MAAA,EAAQF,SAAU,CAAAE,MAAA,IAAUH,oBAAqB,CAAAI,aAAA;MACjDQ,KAAA;MACAM,IAAA,EAAMjB,SAAU,CAAAkB,gBAAA,CAAiBC,MAAS;IAAA,CAC7C;EAAA;AAET","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}