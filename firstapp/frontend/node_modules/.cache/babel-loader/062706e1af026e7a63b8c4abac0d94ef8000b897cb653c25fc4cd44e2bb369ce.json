{"ast":null,"code":"var _jsxFileName = \"/Users/huangjiashu/Desktop/AI Projects/doai/firstapp/frontend/src/components/ProjectPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Workflow from \"./Workflow\";\nimport \"../styles/ProjectPage.css\"; // Adjust the path to the styles folder\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProjectPage = () => {\n  _s();\n  const [appId, setAppId] = useState(0);\n  const [input, setInput] = useState(\"\");\n  const [workflow, setWorkflow] = useState(null);\n  const [phaseNames, setPhaseNames] = useState(null); // Track phase names in state\n  const [loading, setLoading] = useState(false); // Track loading state\n  const [clickCount, setClickCount] = useState(0); // Track button clicks\n  const [centerMessage, setCenterMessage] = useState(\"Hey Lydia, what do you want to do in this project?\"); // Center message\n\n  // Load workflow and phase names from localStorage on initial render\n  useEffect(() => {\n    const savedWorkflow = localStorage.getItem(\"workflow\");\n    const savedPhaseNames = localStorage.getItem(\"phaseNames\");\n    if (savedWorkflow && savedPhaseNames) {\n      setWorkflow(JSON.parse(savedWorkflow));\n      setPhaseNames(JSON.parse(savedPhaseNames));\n    }\n  }, []);\n  const handleSubmit = async () => {\n    if (!input.trim()) return; // Prevent empty input submission\n    setLoading(true); // Start loading\n\n    try {\n      if (clickCount < 2) {\n        // Simulate fetching a response from an API\n        const response = await axios.post(\"http://127.0.0.1:8000/api/dig\", {\n          prompt: input\n        });\n        const {\n          app_id,\n          responses\n        } = response.data;\n        setAppId(app_id);\n        setInput(\"\");\n        setCenterMessage(responses);\n      }\n      if (clickCount === 1) {\n        const response = await axios.post(\"http://127.0.0.1:8000/api/dig2\", {\n          app_id: appId,\n          user_response: input\n        });\n        const {\n          responses\n        } = response.data;\n        setInput(\"\");\n        setCenterMessage(responses);\n      } else {\n        // On the third click, make the original API call\n        const response = await axios.post(\"http://127.0.0.1:8000/api/process\", {\n          user_input: input\n        }, {\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        const {\n          wf,\n          phase_names\n        } = response.data;\n        const parsedWorkflow = Object.entries(wf).map(([subtaskName, details]) => ({\n          name: subtaskName,\n          description: details.description,\n          steps: details.workflow.map(step => ({\n            name: step.name,\n            classification: step.classification,\n            execution: step.execution\n          })),\n          phase: details.phase\n        }));\n        setWorkflow(parsedWorkflow); // Set workflow\n        setPhaseNames(phase_names); // Set phase names\n\n        // Save workflow and phase names to localStorage\n        localStorage.setItem(\"workflow\", JSON.stringify(parsedWorkflow));\n        localStorage.setItem(\"phaseNames\", JSON.stringify(phase_names));\n      }\n    } catch (error) {\n      console.error(\"Error during submission:\", error);\n    } finally {\n      setClickCount(prevCount => prevCount + 1); // Increment click count\n      setLoading(false); // Stop loading\n    }\n  };\n  const handleClearWorkflow = () => {\n    setWorkflow(null);\n    setPhaseNames(null);\n    setInput(\"\");\n    setCenterMessage(\"Hey Lydia, what do you want to do in this project?\");\n    setClickCount(0); // Reset click count\n    localStorage.removeItem(\"workflow\");\n    localStorage.removeItem(\"phaseNames\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"null-wrapper\",\n    children: !workflow ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center-message\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: centerMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Tell us a task that you want to do in one sentence, and we will figure it out steps by steps!\",\n          value: input,\n          onChange: e => setInput(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit,\n          disabled: loading,\n          children: loading ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/icons/send.svg\",\n            alt: \"Send\",\n            className: \"send-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"workflow-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(Workflow, {\n        workflow: workflow,\n        phaseDict: phaseNames\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"clear-button\",\n        onClick: handleClearWorkflow,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectPage, \"vdhvZNbV4lL3r52m3dKzRo7LvAI=\");\n_c = ProjectPage;\nexport default ProjectPage;\nvar _c;\n$RefreshReg$(_c, \"ProjectPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","Workflow","jsxDEV","_jsxDEV","ProjectPage","_s","appId","setAppId","input","setInput","workflow","setWorkflow","phaseNames","setPhaseNames","loading","setLoading","clickCount","setClickCount","centerMessage","setCenterMessage","savedWorkflow","localStorage","getItem","savedPhaseNames","JSON","parse","handleSubmit","trim","response","post","prompt","app_id","responses","data","user_response","user_input","headers","wf","phase_names","parsedWorkflow","Object","entries","map","subtaskName","details","name","description","steps","step","classification","execution","phase","setItem","stringify","error","console","prevCount","handleClearWorkflow","removeItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","disabled","src","alt","phaseDict","_c","$RefreshReg$"],"sources":["/Users/huangjiashu/Desktop/AI Projects/doai/firstapp/frontend/src/components/ProjectPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Workflow from \"./Workflow\";\nimport \"../styles/ProjectPage.css\"; // Adjust the path to the styles folder\n\nconst ProjectPage = () => {\n  const [appId, setAppId] = useState(0);\n  const [input, setInput] = useState(\"\");\n  const [workflow, setWorkflow] = useState(null);\n  const [phaseNames, setPhaseNames] = useState(null); // Track phase names in state\n  const [loading, setLoading] = useState(false); // Track loading state\n  const [clickCount, setClickCount] = useState(0); // Track button clicks\n  const [centerMessage, setCenterMessage] = useState(\n    \"Hey Lydia, what do you want to do in this project?\"\n  ); // Center message\n\n  // Load workflow and phase names from localStorage on initial render\n  useEffect(() => {\n    const savedWorkflow = localStorage.getItem(\"workflow\");\n    const savedPhaseNames = localStorage.getItem(\"phaseNames\");\n\n    if (savedWorkflow && savedPhaseNames) {\n      setWorkflow(JSON.parse(savedWorkflow));\n      setPhaseNames(JSON.parse(savedPhaseNames));\n    }\n  }, []);\n\n  const handleSubmit = async () => {\n    if (!input.trim()) return; // Prevent empty input submission\n    setLoading(true); // Start loading\n\n    try {\n      if (clickCount < 2) {\n        // Simulate fetching a response from an API\n        const response = await axios.post(\"http://127.0.0.1:8000/api/dig\", {\n          prompt: input,\n        });\n        const { app_id, responses } = response.data;\n        setAppId(app_id);\n        setInput(\"\");\n        setCenterMessage(responses);\n      }\n      if (clickCount === 1) {\n        const response = await axios.post(\"http://127.0.0.1:8000/api/dig2\", {\n          app_id: appId,\n          user_response: input,\n        });\n        const { responses } = response.data;\n        setInput(\"\");\n        setCenterMessage(responses);\n      } else {\n        // On the third click, make the original API call\n        const response = await axios.post(\n          \"http://127.0.0.1:8000/api/process\",\n          { user_input: input },\n          { headers: { \"Content-Type\": \"application/json\" } }\n        );\n\n        const { wf, phase_names } = response.data;\n\n        const parsedWorkflow = Object.entries(wf).map(\n          ([subtaskName, details]) => ({\n            name: subtaskName,\n            description: details.description,\n            steps: details.workflow.map((step) => ({\n              name: step.name,\n              classification: step.classification,\n              execution: step.execution,\n            })),\n            phase: details.phase,\n          })\n        );\n\n        setWorkflow(parsedWorkflow); // Set workflow\n        setPhaseNames(phase_names); // Set phase names\n\n        // Save workflow and phase names to localStorage\n        localStorage.setItem(\"workflow\", JSON.stringify(parsedWorkflow));\n        localStorage.setItem(\"phaseNames\", JSON.stringify(phase_names));\n      }\n    } catch (error) {\n      console.error(\"Error during submission:\", error);\n    } finally {\n      setClickCount((prevCount) => prevCount + 1); // Increment click count\n      setLoading(false); // Stop loading\n    }\n  };\n\n  const handleClearWorkflow = () => {\n    setWorkflow(null);\n    setPhaseNames(null);\n    setInput(\"\");\n    setCenterMessage(\"Hey Lydia, what do you want to do in this project?\");\n    setClickCount(0); // Reset click count\n    localStorage.removeItem(\"workflow\");\n    localStorage.removeItem(\"phaseNames\");\n  };\n\n  return (\n    <div className=\"null-wrapper\">\n      {!workflow ? (\n        <div className=\"content-wrapper\">\n          <div className=\"center-message\">\n            <h2>{centerMessage}</h2>\n          </div>\n          <div className=\"input-container\">\n            <input\n              type=\"text\"\n              placeholder=\"Tell us a task that you want to do in one sentence, and we will figure it out steps by steps!\"\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n            />\n            <button onClick={handleSubmit} disabled={loading}>\n              {loading ? (\n                <span className=\"spinner\"></span>\n              ) : (\n                <img src=\"/icons/send.svg\" alt=\"Send\" className=\"send-icon\" />\n              )}\n            </button>\n          </div>\n        </div>\n      ) : (\n        <div className=\"workflow-wrapper\">\n          <Workflow workflow={workflow} phaseDict={phaseNames} />\n          <button className=\"clear-button\" onClick={handleClearWorkflow}>\n            Clear\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ProjectPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}