{"ast":null,"code":"var _jsxFileName = \"/Users/huangjiashu/Desktop/AI Projects/doai/firstapp/frontend/src/components/Workflow.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"../styles/Workflow.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Workflow = ({\n  workflow,\n  phaseDict\n}) => {\n  _s();\n  const groupedByPhase = workflow.reduce((acc, subtask) => {\n    acc[subtask.phase] = acc[subtask.phase] || [];\n    acc[subtask.phase].push(subtask);\n    return acc;\n  }, {});\n\n  // const [expandedSubtasks, setExpandedSubtasks] = useState({});\n  const [expandedSteps, setExpandedSteps] = useState({});\n  const [evidence, setEvidence] = useState({}); // Store evidence for each step\n  const [loadingEvidence, setLoadingEvidence] = useState({});\n  const [selectedStep, setSelectedStep] = useState(null); // Track selected step\n\n  // const toggleSubtask = (index) => {\n  //   setExpandedSubtasks((prev) => ({\n  //     ...prev,\n  //     [index]: !prev[index],\n  //   }));\n  // };\n\n  const toggleStepDetails = (subtaskIndex, stepIndex) => {\n    setExpandedSteps(prev => ({\n      ...prev,\n      [`${subtaskIndex}-${stepIndex}`]: !prev[`${subtaskIndex}-${stepIndex}`]\n    }));\n  };\n  const callApiForEvidence = async (name, execution) => {\n    try {\n      const response = await axios.post(\"http://127.0.0.1:8000/api/process_step\", {\n        name: name,\n        execution: execution\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      return response.data.evidence.map(item => ({\n        title: item.title,\n        link: item.link,\n        snippet: item.snippet\n      })) || \"No evidence found.\";\n    } catch (error) {\n      console.error(\"Error calling API:\", error);\n      return \"Error retrieving evidence.\";\n    }\n  };\n  const handleRoleCircleClick = async (step, phaseIndex, subtaskIndex, stepIndex) => {\n    const evidenceKey = `${phaseIndex}-${subtaskIndex}-${stepIndex}`;\n    setLoadingEvidence(prev => ({\n      ...prev,\n      [evidenceKey]: true\n    }));\n    const evidenceText = await callApiForEvidence(step.name, step.execution);\n    setEvidence(prev => ({\n      ...prev,\n      [evidenceKey]: evidenceText\n    }));\n    setLoadingEvidence(prev => ({\n      ...prev,\n      [evidenceKey]: false\n    }));\n  };\n  const resetSelection = () => {\n    setSelectedStep(null);\n  };\n  const handleStepClick = (phaseIndex, subtaskIndex) => {\n    setSelectedStep({\n      phaseIndex,\n      subtaskIndex\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"workflow-container\",\n    onClick: resetSelection,\n    children: Object.entries(groupedByPhase).map(([phase, subtasks], phaseIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `phase-row`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `\"phase-label-container\"  ${selectedStep ? \"faded-out\" : \"\"}`,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"phase-label-text\",\n          children: `PHASE ${phaseIndex + 1} - ${phaseDict[phase] || `Phase ${phase}`}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `subtasks-wrapper `,\n        children: subtasks.map((subtask, subtaskIndex) => {\n          const isSelected = selectedStep && selectedStep.subtaskIndex === subtaskIndex && selectedStep.phaseIndex === phaseIndex;\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [isSelected && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"subtask-placeholder\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"subtask-title\",\n                children: subtask.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"steps\",\n                children: subtask.steps.map((step, stepIndex) => {\n                  const evidenceKey = `${phaseIndex}-${subtaskIndex}-${stepIndex}`;\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"step\",\n                    onClick: e => {\n                      e.stopPropagation();\n                      toggleStepDetails(`${phaseIndex}-${subtaskIndex}`, stepIndex);\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"step-header\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"step-indexCircle\",\n                        children: stepIndex + 1\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 129,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"step-name\",\n                        children: step.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 132,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: `step-roleCircle`,\n                        onClick: e => {\n                          e.stopPropagation();\n                          handleRoleCircleClick(step, phaseIndex, subtaskIndex, stepIndex);\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 133,\n                        columnNumber: 35\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 128,\n                      columnNumber: 33\n                    }, this), expandedSteps[`${phaseIndex}-${subtaskIndex}-${stepIndex}`] && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"step-details\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"step-attribute\",\n                        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                          children: \"Classification:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 152,\n                          columnNumber: 39\n                        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 152,\n                          columnNumber: 72\n                        }, this), step.classification]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 151,\n                        columnNumber: 37\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"step-attribute\",\n                        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                          children: \"Role:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 156,\n                          columnNumber: 39\n                        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 156,\n                          columnNumber: 62\n                        }, this), step.execution]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 155,\n                        columnNumber: 37\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"step-attribute\",\n                        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                          children: \"Evidence:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 160,\n                          columnNumber: 39\n                        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 160,\n                          columnNumber: 66\n                        }, this), loadingEvidence[evidenceKey] ? \"Loading evidence...\" : evidence[evidenceKey] || \"Click the role circle to fetch evidence.\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 159,\n                        columnNumber: 37\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 150,\n                      columnNumber: 35\n                    }, this)]\n                  }, stepIndex, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 31\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 25\n              }, this)]\n            }, `${subtaskIndex}-placeholder`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `subtask ${!selectedStep ? \"\" : selectedStep.subtaskIndex !== subtaskIndex || selectedStep.phaseIndex !== phaseIndex ? \"faded-out\" : \"selected\"}`,\n              onClick: e => {\n                e.stopPropagation(); // Prevent reset on subtask click\n                // toggleSubtask(`${phaseIndex}-${subtaskIndex}`);\n                handleStepClick(phaseIndex, subtaskIndex);\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"subtask-title\",\n                children: subtask.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"steps\",\n                children: subtask.steps.map((step, stepIndex) => {\n                  const evidenceKey = `${phaseIndex}-${subtaskIndex}-${stepIndex}`;\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"step\",\n                    onClick: e => {\n                      e.stopPropagation();\n                      toggleStepDetails(`${phaseIndex}-${subtaskIndex}`, stepIndex);\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"step-header\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"step-indexCircle\",\n                        children: stepIndex + 1\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 211,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"step-name\",\n                        children: step.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 214,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: `step-roleCircle`,\n                        onClick: e => {\n                          e.stopPropagation();\n                          handleRoleCircleClick(step, phaseIndex, subtaskIndex, stepIndex);\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 215,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 210,\n                      columnNumber: 31\n                    }, this), expandedSteps[`${phaseIndex}-${subtaskIndex}-${stepIndex}`] && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"step-details\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"step-attribute\",\n                        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                          children: \"Classification:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 234,\n                          columnNumber: 37\n                        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 234,\n                          columnNumber: 70\n                        }, this), step.classification]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 233,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"step-attribute\",\n                        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                          children: \"Role:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 238,\n                          columnNumber: 37\n                        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 238,\n                          columnNumber: 60\n                        }, this), step.execution]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 237,\n                        columnNumber: 35\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"step-attribute\",\n                        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                          children: \"Evidence:\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 242,\n                          columnNumber: 37\n                        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 242,\n                          columnNumber: 64\n                        }, this), loadingEvidence[evidenceKey] ? \"Loading evidence...\" : evidence[evidenceKey] || \"Click the role circle to fetch evidence.\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 241,\n                        columnNumber: 35\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 232,\n                      columnNumber: 33\n                    }, this)]\n                  }, stepIndex, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 199,\n                    columnNumber: 29\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 23\n              }, this)]\n            }, subtaskIndex, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, phase, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(Workflow, \"eaNQhs+RWfAynsJAtBCCCgmNOec=\");\n_c = Workflow;\nexport default Workflow;\nvar _c;\n$RefreshReg$(_c, \"Workflow\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Workflow","workflow","phaseDict","_s","groupedByPhase","reduce","acc","subtask","phase","push","expandedSteps","setExpandedSteps","evidence","setEvidence","loadingEvidence","setLoadingEvidence","selectedStep","setSelectedStep","toggleStepDetails","subtaskIndex","stepIndex","prev","callApiForEvidence","name","execution","response","post","headers","data","map","item","title","link","snippet","error","console","handleRoleCircleClick","step","phaseIndex","evidenceKey","evidenceText","resetSelection","handleStepClick","className","onClick","children","Object","entries","subtasks","fileName","_jsxFileName","lineNumber","columnNumber","isSelected","description","steps","e","stopPropagation","classification","_c","$RefreshReg$"],"sources":["/Users/huangjiashu/Desktop/AI Projects/doai/firstapp/frontend/src/components/Workflow.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"../styles/Workflow.css\";\n\nconst Workflow = ({ workflow, phaseDict }) => {\n  const groupedByPhase = workflow.reduce((acc, subtask) => {\n    acc[subtask.phase] = acc[subtask.phase] || [];\n    acc[subtask.phase].push(subtask);\n    return acc;\n  }, {});\n\n  // const [expandedSubtasks, setExpandedSubtasks] = useState({});\n  const [expandedSteps, setExpandedSteps] = useState({});\n  const [evidence, setEvidence] = useState({}); // Store evidence for each step\n  const [loadingEvidence, setLoadingEvidence] = useState({});\n  const [selectedStep, setSelectedStep] = useState(null); // Track selected step\n\n  // const toggleSubtask = (index) => {\n  //   setExpandedSubtasks((prev) => ({\n  //     ...prev,\n  //     [index]: !prev[index],\n  //   }));\n  // };\n\n  const toggleStepDetails = (subtaskIndex, stepIndex) => {\n    setExpandedSteps((prev) => ({\n      ...prev,\n      [`${subtaskIndex}-${stepIndex}`]: !prev[`${subtaskIndex}-${stepIndex}`],\n    }));\n  };\n\n  const callApiForEvidence = async (name, execution) => {\n    try {\n      const response = await axios.post(\n        \"http://127.0.0.1:8000/api/process_step\",\n        { name: name, execution: execution },\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n      return (\n        response.data.evidence.map((item) => ({\n          title: item.title,\n          link: item.link,\n          snippet: item.snippet,\n        })) || \"No evidence found.\"\n      );\n    } catch (error) {\n      console.error(\"Error calling API:\", error);\n      return \"Error retrieving evidence.\";\n    }\n  };\n\n  const handleRoleCircleClick = async (\n    step,\n    phaseIndex,\n    subtaskIndex,\n    stepIndex\n  ) => {\n    const evidenceKey = `${phaseIndex}-${subtaskIndex}-${stepIndex}`;\n    setLoadingEvidence((prev) => ({ ...prev, [evidenceKey]: true }));\n    const evidenceText = await callApiForEvidence(step.name, step.execution);\n    setEvidence((prev) => ({\n      ...prev,\n      [evidenceKey]: evidenceText,\n    }));\n    setLoadingEvidence((prev) => ({ ...prev, [evidenceKey]: false }));\n  };\n\n  const resetSelection = () => {\n    setSelectedStep(null);\n  };\n\n  const handleStepClick = (phaseIndex, subtaskIndex) => {\n    setSelectedStep({ phaseIndex, subtaskIndex });\n  };\n\n  return (\n    <div className=\"workflow-container\" onClick={resetSelection}>\n      {Object.entries(groupedByPhase).map(([phase, subtasks], phaseIndex) => (\n        <div key={phase} className={`phase-row`}>\n          <div\n            className={`\"phase-label-container\"  ${\n              selectedStep ? \"faded-out\" : \"\"\n            }`}\n          >\n            <span className=\"phase-label-text\">\n              {`PHASE ${phaseIndex + 1} - ${\n                phaseDict[phase] || `Phase ${phase}`\n              }`}\n            </span>\n          </div>\n          <div className={`subtasks-wrapper `}>\n            {subtasks.map((subtask, subtaskIndex) => {\n              const isSelected =\n                selectedStep &&\n                selectedStep.subtaskIndex === subtaskIndex &&\n                selectedStep.phaseIndex === phaseIndex;\n\n              return (\n                <>\n                  {isSelected && (\n                    <div\n                      key={`${subtaskIndex}-placeholder`}\n                      className=\"subtask-placeholder\"\n                    >\n                      <h2 className=\"subtask-title\">{subtask.description}</h2>\n\n                      {/* {expandedSubtasks[`${phaseIndex}-${subtaskIndex}`] && ( */}\n                      {\n                        <div className=\"steps\">\n                          {subtask.steps.map((step, stepIndex) => {\n                            const evidenceKey = `${phaseIndex}-${subtaskIndex}-${stepIndex}`;\n                            return (\n                              <div\n                                key={stepIndex}\n                                className=\"step\"\n                                onClick={(e) => {\n                                  e.stopPropagation();\n                                  toggleStepDetails(\n                                    `${phaseIndex}-${subtaskIndex}`,\n                                    stepIndex\n                                  );\n                                }}\n                              >\n                                <div className=\"step-header\">\n                                  <div className=\"step-indexCircle\">\n                                    {stepIndex + 1}\n                                  </div>\n                                  <div className=\"step-name\">{step.name}</div>\n                                  <div\n                                    className={`step-roleCircle`}\n                                    onClick={(e) => {\n                                      e.stopPropagation();\n                                      handleRoleCircleClick(\n                                        step,\n                                        phaseIndex,\n                                        subtaskIndex,\n                                        stepIndex\n                                      );\n                                    }}\n                                  ></div>\n                                </div>\n\n                                {expandedSteps[\n                                  `${phaseIndex}-${subtaskIndex}-${stepIndex}`\n                                ] && (\n                                  <div className=\"step-details\">\n                                    <div className=\"step-attribute\">\n                                      <strong>Classification:</strong> <br />\n                                      {step.classification}\n                                    </div>\n                                    <div className=\"step-attribute\">\n                                      <strong>Role:</strong> <br />\n                                      {step.execution}\n                                    </div>\n                                    <div className=\"step-attribute\">\n                                      <strong>Evidence:</strong> <br />\n                                      {loadingEvidence[evidenceKey]\n                                        ? \"Loading evidence...\"\n                                        : evidence[evidenceKey] ||\n                                          \"Click the role circle to fetch evidence.\"}\n                                    </div>\n                                  </div>\n                                )}\n                              </div>\n                            );\n                          })}\n                        </div>\n                      }\n                    </div>\n                  )}\n                  <div\n                    key={subtaskIndex}\n                    className={`subtask ${\n                      !selectedStep\n                        ? \"\"\n                        : selectedStep.subtaskIndex !== subtaskIndex ||\n                          selectedStep.phaseIndex !== phaseIndex\n                        ? \"faded-out\"\n                        : \"selected\"\n                    }`}\n                    onClick={(e) => {\n                      e.stopPropagation(); // Prevent reset on subtask click\n                      // toggleSubtask(`${phaseIndex}-${subtaskIndex}`);\n                      handleStepClick(phaseIndex, subtaskIndex);\n                    }}\n                  >\n                    <h2 className=\"subtask-title\">{subtask.description}</h2>\n\n                    {/* {expandedSubtasks[`${phaseIndex}-${subtaskIndex}`] && ( */}\n                    {\n                      <div className=\"steps\">\n                        {subtask.steps.map((step, stepIndex) => {\n                          const evidenceKey = `${phaseIndex}-${subtaskIndex}-${stepIndex}`;\n                          return (\n                            <div\n                              key={stepIndex}\n                              className=\"step\"\n                              onClick={(e) => {\n                                e.stopPropagation();\n                                toggleStepDetails(\n                                  `${phaseIndex}-${subtaskIndex}`,\n                                  stepIndex\n                                );\n                              }}\n                            >\n                              <div className=\"step-header\">\n                                <div className=\"step-indexCircle\">\n                                  {stepIndex + 1}\n                                </div>\n                                <div className=\"step-name\">{step.name}</div>\n                                <div\n                                  className={`step-roleCircle`}\n                                  onClick={(e) => {\n                                    e.stopPropagation();\n                                    handleRoleCircleClick(\n                                      step,\n                                      phaseIndex,\n                                      subtaskIndex,\n                                      stepIndex\n                                    );\n                                  }}\n                                ></div>\n                              </div>\n\n                              {expandedSteps[\n                                `${phaseIndex}-${subtaskIndex}-${stepIndex}`\n                              ] && (\n                                <div className=\"step-details\">\n                                  <div className=\"step-attribute\">\n                                    <strong>Classification:</strong> <br />\n                                    {step.classification}\n                                  </div>\n                                  <div className=\"step-attribute\">\n                                    <strong>Role:</strong> <br />\n                                    {step.execution}\n                                  </div>\n                                  <div className=\"step-attribute\">\n                                    <strong>Evidence:</strong> <br />\n                                    {loadingEvidence[evidenceKey]\n                                      ? \"Loading evidence...\"\n                                      : evidence[evidenceKey] ||\n                                        \"Click the role circle to fetch evidence.\"}\n                                  </div>\n                                </div>\n                              )}\n                            </div>\n                          );\n                        })}\n                      </div>\n                    }\n                  </div>\n                </>\n              );\n            })}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Workflow;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}