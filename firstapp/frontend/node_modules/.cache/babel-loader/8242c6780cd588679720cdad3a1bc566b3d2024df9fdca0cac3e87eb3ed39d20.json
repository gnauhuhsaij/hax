{"ast":null,"code":"var _jsxFileName = \"/Users/huangjiashu/Desktop/AI Projects/doai/firstapp/frontend/src/components/Workflow.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"../styles/Workflow.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Workflow = ({\n  workflow,\n  phaseDict\n}) => {\n  _s();\n  const groupedByPhase = workflow.reduce((acc, subtask) => {\n    acc[subtask.phase] = acc[subtask.phase] || [];\n    acc[subtask.phase].push(subtask);\n    return acc;\n  }, {});\n\n  // const [expandedSubtasks, setExpandedSubtasks] = useState({});\n  const [expandedSteps, setExpandedSteps] = useState({});\n  const [evidence, setEvidence] = useState({}); // Store evidence for each step\n  const [loadingEvidence, setLoadingEvidence] = useState({});\n  const [selectedStep, setSelectedStep] = useState(null); // Track selected step\n  const [modalContent, setModalContent] = useState(null);\n\n  // const toggleSubtask = (index) => {\n  //   setExpandedSubtasks((prev) => ({\n  //     ...prev,\n  //     [index]: !prev[index],\n  //   }));\n  // };\n\n  const toggleStepDetails = (subtaskIndex, stepIndex) => {\n    setExpandedSteps(prev => ({\n      ...prev,\n      [`${subtaskIndex}-${stepIndex}`]: !prev[`${subtaskIndex}-${stepIndex}`]\n    }));\n  };\n  const callApiForEvidence = async (name, execution) => {\n    try {\n      const response = await axios.post(\"http://127.0.0.1:8000/api/process_step\", {\n        name: name,\n        execution: execution\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const evidence = response.data.evidence.map(item => ({\n        title: item.title,\n        link: item.link,\n        snippet: item.snippet\n      }));\n      return evidence.length > 0 ? evidence // Assuming you want the first evidence item\n      : {\n        title: \"No evidence found.\",\n        link: \"\",\n        snippet: \"\"\n      };\n    } catch (error) {\n      console.error(\"Error calling API:\", error);\n      return {\n        title: \"Error retrieving evidence.\",\n        link: \"\",\n        snippet: \"\"\n      };\n    }\n  };\n  const handleRoleCircleClick = async (step, phaseIndex, subtaskIndex, stepIndex) => {\n    const evidenceKey = `${phaseIndex}-${subtaskIndex}-${stepIndex}`;\n    setLoadingEvidence(prev => ({\n      ...prev,\n      [evidenceKey]: true\n    }));\n\n    // Call API and update state\n    const evidenceItem = await callApiForEvidence(step.name, step.execution);\n    setEvidence(prev => ({\n      ...prev,\n      [evidenceKey]: evidenceItem // Store full evidence item here\n    }));\n    setLoadingEvidence(prev => ({\n      ...prev,\n      [evidenceKey]: false\n    }));\n    setModalContent(s);\n  };\n  const resetSelection = () => {\n    setSelectedStep(null);\n    setModalContent(null);\n  };\n  const handleStepClick = (phaseIndex, subtaskIndex) => {\n    setSelectedStep({\n      phaseIndex,\n      subtaskIndex\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"workflow-container\",\n      onClick: resetSelection,\n      children: Object.entries(groupedByPhase).map(([phase, subtasks], phaseIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `phase-row`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `\"phase-label-container\"  ${selectedStep ? \"faded-out\" : \"\"}`,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"phase-label-text\",\n            children: `PHASE ${phaseIndex + 1} - ${phaseDict[phase] || `Phase ${phase}`}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `subtasks-wrapper `,\n          children: subtasks.map((subtask, subtaskIndex) => {\n            const isSelected = selectedStep && selectedStep.subtaskIndex === subtaskIndex && selectedStep.phaseIndex === phaseIndex;\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [isSelected && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"subtask-placeholder\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  className: \"subtask-title\",\n                  children: subtask.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"steps\",\n                  children: subtask.steps.map((step, stepIndex) => {\n                    var _evidence$evidenceKey;\n                    const evidenceKey = `${phaseIndex}-${subtaskIndex}-${stepIndex}`;\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"step\",\n                      onClick: e => {\n                        e.stopPropagation();\n                        toggleStepDetails(`${phaseIndex}-${subtaskIndex}`, stepIndex);\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"step-header\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"step-indexCircle\",\n                          children: stepIndex + 1\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 139,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"step-name\",\n                          children: step.name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 142,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: `step-roleCircle`,\n                          onClick: e => {\n                            e.stopPropagation();\n                            handleRoleCircleClick(step, phaseIndex, subtaskIndex, stepIndex);\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 143,\n                          columnNumber: 37\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 138,\n                        columnNumber: 35\n                      }, this), expandedSteps[`${phaseIndex}-${subtaskIndex}-${stepIndex}`] && /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"step-details\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"step-attribute\",\n                          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                            children: \"Classification:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 162,\n                            columnNumber: 41\n                          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 162,\n                            columnNumber: 74\n                          }, this), step.classification]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 161,\n                          columnNumber: 39\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"step-attribute\",\n                          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                            children: \"Role:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 166,\n                            columnNumber: 41\n                          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 166,\n                            columnNumber: 64\n                          }, this), step.execution]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 165,\n                          columnNumber: 39\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"step-attribute\",\n                          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                            children: \"Evidence:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 170,\n                            columnNumber: 41\n                          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 170,\n                            columnNumber: 68\n                          }, this), loadingEvidence[evidenceKey] ? \"Loading evidence...\" : ((_evidence$evidenceKey = evidence[evidenceKey]) === null || _evidence$evidenceKey === void 0 ? void 0 : _evidence$evidenceKey.title) || \"Click the role circle to fetch evidence.\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 169,\n                          columnNumber: 39\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 160,\n                        columnNumber: 37\n                      }, this)]\n                    }, stepIndex, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 127,\n                      columnNumber: 33\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 27\n                }, this)]\n              }, `${subtaskIndex}-placeholder`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `subtask ${!selectedStep ? \"\" : selectedStep.subtaskIndex !== subtaskIndex || selectedStep.phaseIndex !== phaseIndex ? \"faded-out\" : \"selected\"}`,\n                onClick: e => {\n                  e.stopPropagation(); // Prevent reset on subtask click\n                  // toggleSubtask(`${phaseIndex}-${subtaskIndex}`);\n                  handleStepClick(phaseIndex, subtaskIndex);\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  className: \"subtask-title\",\n                  children: subtask.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"steps\",\n                  children: subtask.steps.map((step, stepIndex) => {\n                    var _evidence$evidenceKey2;\n                    const evidenceKey = `${phaseIndex}-${subtaskIndex}-${stepIndex}`;\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"step\",\n                      onClick: e => {\n                        e.stopPropagation();\n                        toggleStepDetails(`${phaseIndex}-${subtaskIndex}`, stepIndex);\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"step-header\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"step-indexCircle\",\n                          children: stepIndex + 1\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 221,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"step-name\",\n                          children: step.name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 224,\n                          columnNumber: 35\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: `step-roleCircle`,\n                          onClick: e => {\n                            e.stopPropagation();\n                            handleRoleCircleClick(step, phaseIndex, subtaskIndex, stepIndex);\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 225,\n                          columnNumber: 35\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 220,\n                        columnNumber: 33\n                      }, this), expandedSteps[`${phaseIndex}-${subtaskIndex}-${stepIndex}`] && /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"step-details\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"step-attribute\",\n                          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                            children: \"Classification:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 244,\n                            columnNumber: 39\n                          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 244,\n                            columnNumber: 72\n                          }, this), step.classification]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 243,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"step-attribute\",\n                          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                            children: \"Role:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 248,\n                            columnNumber: 39\n                          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 248,\n                            columnNumber: 62\n                          }, this), step.execution]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 247,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"step-attribute\",\n                          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                            children: \"Evidence:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 252,\n                            columnNumber: 39\n                          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 252,\n                            columnNumber: 66\n                          }, this), loadingEvidence[evidenceKey] ? \"Loading evidence...\" : (_evidence$evidenceKey2 = evidence[evidenceKey]) !== null && _evidence$evidenceKey2 !== void 0 && _evidence$evidenceKey2.length ? evidence[evidenceKey].slice(0, 20) // Limit to the first 3 items\n                          .map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                            style: {\n                              marginBottom: \"1em\"\n                            },\n                            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                                children: \"Title:\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 264,\n                                columnNumber: 51\n                              }, this), \" \", item.title]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 263,\n                              columnNumber: 49\n                            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                                children: \"Link:\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 268,\n                                columnNumber: 51\n                              }, this), \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n                                href: item.link,\n                                target: \"_blank\",\n                                rel: \"noopener noreferrer\",\n                                children: item.link\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 269,\n                                columnNumber: 51\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 267,\n                              columnNumber: 49\n                            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                                children: \"Snippet:\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 278,\n                                columnNumber: 51\n                              }, this), \" \", item.snippet]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 277,\n                              columnNumber: 49\n                            }, this)]\n                          }, index, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 259,\n                            columnNumber: 47\n                          }, this)) : \"Click the role circle to fetch evidence.\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 251,\n                          columnNumber: 37\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 242,\n                        columnNumber: 35\n                      }, this)]\n                    }, stepIndex, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 209,\n                      columnNumber: 31\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 25\n                }, this)]\n              }, subtaskIndex, true, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)]\n      }, phase, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"parent-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `modal-container ${modalContent ? \"\" : \"hidden\"}`,\n        children: modalContent || /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Click a role circle to view details.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 28\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Workflow, \"FuqO3rajH0AEw6ZwKC9r3B3agds=\");\n_c = Workflow;\nexport default Workflow;\nvar _c;\n$RefreshReg$(_c, \"Workflow\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Workflow","workflow","phaseDict","_s","groupedByPhase","reduce","acc","subtask","phase","push","expandedSteps","setExpandedSteps","evidence","setEvidence","loadingEvidence","setLoadingEvidence","selectedStep","setSelectedStep","modalContent","setModalContent","toggleStepDetails","subtaskIndex","stepIndex","prev","callApiForEvidence","name","execution","response","post","headers","data","map","item","title","link","snippet","length","error","console","handleRoleCircleClick","step","phaseIndex","evidenceKey","evidenceItem","s","resetSelection","handleStepClick","children","className","onClick","Object","entries","subtasks","fileName","_jsxFileName","lineNumber","columnNumber","isSelected","description","steps","_evidence$evidenceKey","e","stopPropagation","classification","_evidence$evidenceKey2","slice","index","style","marginBottom","href","target","rel","_c","$RefreshReg$"],"sources":["/Users/huangjiashu/Desktop/AI Projects/doai/firstapp/frontend/src/components/Workflow.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"../styles/Workflow.css\";\n\nconst Workflow = ({ workflow, phaseDict }) => {\n  const groupedByPhase = workflow.reduce((acc, subtask) => {\n    acc[subtask.phase] = acc[subtask.phase] || [];\n    acc[subtask.phase].push(subtask);\n    return acc;\n  }, {});\n\n  // const [expandedSubtasks, setExpandedSubtasks] = useState({});\n  const [expandedSteps, setExpandedSteps] = useState({});\n  const [evidence, setEvidence] = useState({}); // Store evidence for each step\n  const [loadingEvidence, setLoadingEvidence] = useState({});\n  const [selectedStep, setSelectedStep] = useState(null); // Track selected step\n  const [modalContent, setModalContent] = useState(null);\n\n  // const toggleSubtask = (index) => {\n  //   setExpandedSubtasks((prev) => ({\n  //     ...prev,\n  //     [index]: !prev[index],\n  //   }));\n  // };\n\n  const toggleStepDetails = (subtaskIndex, stepIndex) => {\n    setExpandedSteps((prev) => ({\n      ...prev,\n      [`${subtaskIndex}-${stepIndex}`]: !prev[`${subtaskIndex}-${stepIndex}`],\n    }));\n  };\n\n  const callApiForEvidence = async (name, execution) => {\n    try {\n      const response = await axios.post(\n        \"http://127.0.0.1:8000/api/process_step\",\n        { name: name, execution: execution },\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      const evidence = response.data.evidence.map((item) => ({\n        title: item.title,\n        link: item.link,\n        snippet: item.snippet,\n      }));\n\n      return evidence.length > 0\n        ? evidence // Assuming you want the first evidence item\n        : { title: \"No evidence found.\", link: \"\", snippet: \"\" };\n    } catch (error) {\n      console.error(\"Error calling API:\", error);\n      return { title: \"Error retrieving evidence.\", link: \"\", snippet: \"\" };\n    }\n  };\n\n  const handleRoleCircleClick = async (\n    step,\n    phaseIndex,\n    subtaskIndex,\n    stepIndex\n  ) => {\n    const evidenceKey = `${phaseIndex}-${subtaskIndex}-${stepIndex}`;\n    setLoadingEvidence((prev) => ({ ...prev, [evidenceKey]: true }));\n\n    // Call API and update state\n    const evidenceItem = await callApiForEvidence(step.name, step.execution);\n    setEvidence((prev) => ({\n      ...prev,\n      [evidenceKey]: evidenceItem, // Store full evidence item here\n    }));\n\n    setLoadingEvidence((prev) => ({ ...prev, [evidenceKey]: false }));\n    setModalContent(s);\n  };\n\n  const resetSelection = () => {\n    setSelectedStep(null);\n    setModalContent(null);\n  };\n\n  const handleStepClick = (phaseIndex, subtaskIndex) => {\n    setSelectedStep({ phaseIndex, subtaskIndex });\n  };\n\n  return (\n    <>\n      <div className=\"workflow-container\" onClick={resetSelection}>\n        {Object.entries(groupedByPhase).map(([phase, subtasks], phaseIndex) => (\n          <div key={phase} className={`phase-row`}>\n            <div\n              className={`\"phase-label-container\"  ${\n                selectedStep ? \"faded-out\" : \"\"\n              }`}\n            >\n              <span className=\"phase-label-text\">\n                {`PHASE ${phaseIndex + 1} - ${\n                  phaseDict[phase] || `Phase ${phase}`\n                }`}\n              </span>\n            </div>\n            <div className={`subtasks-wrapper `}>\n              {subtasks.map((subtask, subtaskIndex) => {\n                const isSelected =\n                  selectedStep &&\n                  selectedStep.subtaskIndex === subtaskIndex &&\n                  selectedStep.phaseIndex === phaseIndex;\n\n                return (\n                  <>\n                    {isSelected && (\n                      <div\n                        key={`${subtaskIndex}-placeholder`}\n                        className=\"subtask-placeholder\"\n                      >\n                        <h2 className=\"subtask-title\">{subtask.description}</h2>\n\n                        {/* {expandedSubtasks[`${phaseIndex}-${subtaskIndex}`] && ( */}\n                        {\n                          <div className=\"steps\">\n                            {subtask.steps.map((step, stepIndex) => {\n                              const evidenceKey = `${phaseIndex}-${subtaskIndex}-${stepIndex}`;\n                              return (\n                                <div\n                                  key={stepIndex}\n                                  className=\"step\"\n                                  onClick={(e) => {\n                                    e.stopPropagation();\n                                    toggleStepDetails(\n                                      `${phaseIndex}-${subtaskIndex}`,\n                                      stepIndex\n                                    );\n                                  }}\n                                >\n                                  <div className=\"step-header\">\n                                    <div className=\"step-indexCircle\">\n                                      {stepIndex + 1}\n                                    </div>\n                                    <div className=\"step-name\">{step.name}</div>\n                                    <div\n                                      className={`step-roleCircle`}\n                                      onClick={(e) => {\n                                        e.stopPropagation();\n                                        handleRoleCircleClick(\n                                          step,\n                                          phaseIndex,\n                                          subtaskIndex,\n                                          stepIndex\n                                        );\n                                      }}\n                                    ></div>\n                                  </div>\n\n                                  {expandedSteps[\n                                    `${phaseIndex}-${subtaskIndex}-${stepIndex}`\n                                  ] && (\n                                    <div className=\"step-details\">\n                                      <div className=\"step-attribute\">\n                                        <strong>Classification:</strong> <br />\n                                        {step.classification}\n                                      </div>\n                                      <div className=\"step-attribute\">\n                                        <strong>Role:</strong> <br />\n                                        {step.execution}\n                                      </div>\n                                      <div className=\"step-attribute\">\n                                        <strong>Evidence:</strong> <br />\n                                        {loadingEvidence[evidenceKey]\n                                          ? \"Loading evidence...\"\n                                          : evidence[evidenceKey]?.title ||\n                                            \"Click the role circle to fetch evidence.\"}\n                                      </div>\n                                    </div>\n                                  )}\n                                </div>\n                              );\n                            })}\n                          </div>\n                        }\n                      </div>\n                    )}\n                    <div\n                      key={subtaskIndex}\n                      className={`subtask ${\n                        !selectedStep\n                          ? \"\"\n                          : selectedStep.subtaskIndex !== subtaskIndex ||\n                            selectedStep.phaseIndex !== phaseIndex\n                          ? \"faded-out\"\n                          : \"selected\"\n                      }`}\n                      onClick={(e) => {\n                        e.stopPropagation(); // Prevent reset on subtask click\n                        // toggleSubtask(`${phaseIndex}-${subtaskIndex}`);\n                        handleStepClick(phaseIndex, subtaskIndex);\n                      }}\n                    >\n                      <h2 className=\"subtask-title\">{subtask.description}</h2>\n\n                      {/* {expandedSubtasks[`${phaseIndex}-${subtaskIndex}`] && ( */}\n                      {\n                        <div className=\"steps\">\n                          {subtask.steps.map((step, stepIndex) => {\n                            const evidenceKey = `${phaseIndex}-${subtaskIndex}-${stepIndex}`;\n                            return (\n                              <div\n                                key={stepIndex}\n                                className=\"step\"\n                                onClick={(e) => {\n                                  e.stopPropagation();\n                                  toggleStepDetails(\n                                    `${phaseIndex}-${subtaskIndex}`,\n                                    stepIndex\n                                  );\n                                }}\n                              >\n                                <div className=\"step-header\">\n                                  <div className=\"step-indexCircle\">\n                                    {stepIndex + 1}\n                                  </div>\n                                  <div className=\"step-name\">{step.name}</div>\n                                  <div\n                                    className={`step-roleCircle`}\n                                    onClick={(e) => {\n                                      e.stopPropagation();\n                                      handleRoleCircleClick(\n                                        step,\n                                        phaseIndex,\n                                        subtaskIndex,\n                                        stepIndex\n                                      );\n                                    }}\n                                  ></div>\n                                </div>\n\n                                {expandedSteps[\n                                  `${phaseIndex}-${subtaskIndex}-${stepIndex}`\n                                ] && (\n                                  <div className=\"step-details\">\n                                    <div className=\"step-attribute\">\n                                      <strong>Classification:</strong> <br />\n                                      {step.classification}\n                                    </div>\n                                    <div className=\"step-attribute\">\n                                      <strong>Role:</strong> <br />\n                                      {step.execution}\n                                    </div>\n                                    <div className=\"step-attribute\">\n                                      <strong>Evidence:</strong> <br />\n                                      {loadingEvidence[evidenceKey]\n                                        ? \"Loading evidence...\"\n                                        : evidence[evidenceKey]?.length\n                                        ? evidence[evidenceKey]\n                                            .slice(0, 20) // Limit to the first 3 items\n                                            .map((item, index) => (\n                                              <div\n                                                key={index}\n                                                style={{ marginBottom: \"1em\" }}\n                                              >\n                                                <div>\n                                                  <strong>Title:</strong>{\" \"}\n                                                  {item.title}\n                                                </div>\n                                                <div>\n                                                  <strong>Link:</strong>{\" \"}\n                                                  <a\n                                                    href={item.link}\n                                                    target=\"_blank\"\n                                                    rel=\"noopener noreferrer\"\n                                                  >\n                                                    {item.link}\n                                                  </a>\n                                                </div>\n                                                <div>\n                                                  <strong>Snippet:</strong>{\" \"}\n                                                  {item.snippet}\n                                                </div>\n                                              </div>\n                                            ))\n                                        : \"Click the role circle to fetch evidence.\"}\n                                    </div>\n                                  </div>\n                                )}\n                              </div>\n                            );\n                          })}\n                        </div>\n                      }\n                    </div>\n                  </>\n                );\n              })}\n            </div>\n          </div>\n        ))}\n      </div>\n      <div className={\"parent-container\"}>\n        <div className={`modal-container ${modalContent ? \"\" : \"hidden\"}`}>\n          {modalContent || <p>Click a role circle to view details.</p>}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Workflow;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEhC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAMC,cAAc,GAAGH,QAAQ,CAACI,MAAM,CAAC,CAACC,GAAG,EAAEC,OAAO,KAAK;IACvDD,GAAG,CAACC,OAAO,CAACC,KAAK,CAAC,GAAGF,GAAG,CAACC,OAAO,CAACC,KAAK,CAAC,IAAI,EAAE;IAC7CF,GAAG,CAACC,OAAO,CAACC,KAAK,CAAC,CAACC,IAAI,CAACF,OAAO,CAAC;IAChC,OAAOD,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEN;EACA,MAAM,CAACI,aAAa,EAAEC,gBAAgB,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtD,MAAM,CAACkB,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACoB,eAAe,EAAEC,kBAAkB,CAAC,GAAGrB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1D,MAAM,CAACsB,YAAY,EAAEC,eAAe,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACxD,MAAM,CAACwB,YAAY,EAAEC,eAAe,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;;EAEtD;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAM0B,iBAAiB,GAAGA,CAACC,YAAY,EAAEC,SAAS,KAAK;IACrDX,gBAAgB,CAAEY,IAAI,KAAM;MAC1B,GAAGA,IAAI;MACP,CAAC,GAAGF,YAAY,IAAIC,SAAS,EAAE,GAAG,CAACC,IAAI,CAAC,GAAGF,YAAY,IAAIC,SAAS,EAAE;IACxE,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAME,kBAAkB,GAAG,MAAAA,CAAOC,IAAI,EAAEC,SAAS,KAAK;IACpD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMhC,KAAK,CAACiC,IAAI,CAC/B,wCAAwC,EACxC;QAAEH,IAAI,EAAEA,IAAI;QAAEC,SAAS,EAAEA;MAAU,CAAC,EACpC;QACEG,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CACF,CAAC;MAED,MAAMjB,QAAQ,GAAGe,QAAQ,CAACG,IAAI,CAAClB,QAAQ,CAACmB,GAAG,CAAEC,IAAI,KAAM;QACrDC,KAAK,EAAED,IAAI,CAACC,KAAK;QACjBC,IAAI,EAAEF,IAAI,CAACE,IAAI;QACfC,OAAO,EAAEH,IAAI,CAACG;MAChB,CAAC,CAAC,CAAC;MAEH,OAAOvB,QAAQ,CAACwB,MAAM,GAAG,CAAC,GACtBxB,QAAQ,CAAC;MAAA,EACT;QAAEqB,KAAK,EAAE,oBAAoB;QAAEC,IAAI,EAAE,EAAE;QAAEC,OAAO,EAAE;MAAG,CAAC;IAC5D,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1C,OAAO;QAAEJ,KAAK,EAAE,4BAA4B;QAAEC,IAAI,EAAE,EAAE;QAAEC,OAAO,EAAE;MAAG,CAAC;IACvE;EACF,CAAC;EAED,MAAMI,qBAAqB,GAAG,MAAAA,CAC5BC,IAAI,EACJC,UAAU,EACVpB,YAAY,EACZC,SAAS,KACN;IACH,MAAMoB,WAAW,GAAG,GAAGD,UAAU,IAAIpB,YAAY,IAAIC,SAAS,EAAE;IAChEP,kBAAkB,CAAEQ,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE,CAACmB,WAAW,GAAG;IAAK,CAAC,CAAC,CAAC;;IAEhE;IACA,MAAMC,YAAY,GAAG,MAAMnB,kBAAkB,CAACgB,IAAI,CAACf,IAAI,EAAEe,IAAI,CAACd,SAAS,CAAC;IACxEb,WAAW,CAAEU,IAAI,KAAM;MACrB,GAAGA,IAAI;MACP,CAACmB,WAAW,GAAGC,YAAY,CAAE;IAC/B,CAAC,CAAC,CAAC;IAEH5B,kBAAkB,CAAEQ,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE,CAACmB,WAAW,GAAG;IAAM,CAAC,CAAC,CAAC;IACjEvB,eAAe,CAACyB,CAAC,CAAC;EACpB,CAAC;EAED,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3B5B,eAAe,CAAC,IAAI,CAAC;IACrBE,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC;EAED,MAAM2B,eAAe,GAAGA,CAACL,UAAU,EAAEpB,YAAY,KAAK;IACpDJ,eAAe,CAAC;MAAEwB,UAAU;MAAEpB;IAAa,CAAC,CAAC;EAC/C,CAAC;EAED,oBACExB,OAAA,CAAAE,SAAA;IAAAgD,QAAA,gBACElD,OAAA;MAAKmD,SAAS,EAAC,oBAAoB;MAACC,OAAO,EAAEJ,cAAe;MAAAE,QAAA,EACzDG,MAAM,CAACC,OAAO,CAAC/C,cAAc,CAAC,CAAC2B,GAAG,CAAC,CAAC,CAACvB,KAAK,EAAE4C,QAAQ,CAAC,EAAEX,UAAU,kBAChE5C,OAAA;QAAiBmD,SAAS,EAAE,WAAY;QAAAD,QAAA,gBACtClD,OAAA;UACEmD,SAAS,EAAE,4BACThC,YAAY,GAAG,WAAW,GAAG,EAAE,EAC9B;UAAA+B,QAAA,eAEHlD,OAAA;YAAMmD,SAAS,EAAC,kBAAkB;YAAAD,QAAA,EAC/B,SAASN,UAAU,GAAG,CAAC,MACtBvC,SAAS,CAACM,KAAK,CAAC,IAAI,SAASA,KAAK,EAAE;UACpC;YAAA6C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eACN3D,OAAA;UAAKmD,SAAS,EAAE,mBAAoB;UAAAD,QAAA,EACjCK,QAAQ,CAACrB,GAAG,CAAC,CAACxB,OAAO,EAAEc,YAAY,KAAK;YACvC,MAAMoC,UAAU,GACdzC,YAAY,IACZA,YAAY,CAACK,YAAY,KAAKA,YAAY,IAC1CL,YAAY,CAACyB,UAAU,KAAKA,UAAU;YAExC,oBACE5C,OAAA,CAAAE,SAAA;cAAAgD,QAAA,GACGU,UAAU,iBACT5D,OAAA;gBAEEmD,SAAS,EAAC,qBAAqB;gBAAAD,QAAA,gBAE/BlD,OAAA;kBAAImD,SAAS,EAAC,eAAe;kBAAAD,QAAA,EAAExC,OAAO,CAACmD;gBAAW;kBAAAL,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eAItD3D,OAAA;kBAAKmD,SAAS,EAAC,OAAO;kBAAAD,QAAA,EACnBxC,OAAO,CAACoD,KAAK,CAAC5B,GAAG,CAAC,CAACS,IAAI,EAAElB,SAAS,KAAK;oBAAA,IAAAsC,qBAAA;oBACtC,MAAMlB,WAAW,GAAG,GAAGD,UAAU,IAAIpB,YAAY,IAAIC,SAAS,EAAE;oBAChE,oBACEzB,OAAA;sBAEEmD,SAAS,EAAC,MAAM;sBAChBC,OAAO,EAAGY,CAAC,IAAK;wBACdA,CAAC,CAACC,eAAe,CAAC,CAAC;wBACnB1C,iBAAiB,CACf,GAAGqB,UAAU,IAAIpB,YAAY,EAAE,EAC/BC,SACF,CAAC;sBACH,CAAE;sBAAAyB,QAAA,gBAEFlD,OAAA;wBAAKmD,SAAS,EAAC,aAAa;wBAAAD,QAAA,gBAC1BlD,OAAA;0BAAKmD,SAAS,EAAC,kBAAkB;0BAAAD,QAAA,EAC9BzB,SAAS,GAAG;wBAAC;0BAAA+B,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACX,CAAC,eACN3D,OAAA;0BAAKmD,SAAS,EAAC,WAAW;0BAAAD,QAAA,EAAEP,IAAI,CAACf;wBAAI;0BAAA4B,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAM,CAAC,eAC5C3D,OAAA;0BACEmD,SAAS,EAAE,iBAAkB;0BAC7BC,OAAO,EAAGY,CAAC,IAAK;4BACdA,CAAC,CAACC,eAAe,CAAC,CAAC;4BACnBvB,qBAAqB,CACnBC,IAAI,EACJC,UAAU,EACVpB,YAAY,EACZC,SACF,CAAC;0BACH;wBAAE;0BAAA+B,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACE,CAAC;sBAAA;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACJ,CAAC,EAEL9C,aAAa,CACZ,GAAG+B,UAAU,IAAIpB,YAAY,IAAIC,SAAS,EAAE,CAC7C,iBACCzB,OAAA;wBAAKmD,SAAS,EAAC,cAAc;wBAAAD,QAAA,gBAC3BlD,OAAA;0BAAKmD,SAAS,EAAC,gBAAgB;0BAAAD,QAAA,gBAC7BlD,OAAA;4BAAAkD,QAAA,EAAQ;0BAAe;4BAAAM,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAAQ,CAAC,KAAC,eAAA3D,OAAA;4BAAAwD,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAAK,CAAC,EACtChB,IAAI,CAACuB,cAAc;wBAAA;0BAAAV,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACjB,CAAC,eACN3D,OAAA;0BAAKmD,SAAS,EAAC,gBAAgB;0BAAAD,QAAA,gBAC7BlD,OAAA;4BAAAkD,QAAA,EAAQ;0BAAK;4BAAAM,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAAQ,CAAC,KAAC,eAAA3D,OAAA;4BAAAwD,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAAK,CAAC,EAC5BhB,IAAI,CAACd,SAAS;wBAAA;0BAAA2B,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACZ,CAAC,eACN3D,OAAA;0BAAKmD,SAAS,EAAC,gBAAgB;0BAAAD,QAAA,gBAC7BlD,OAAA;4BAAAkD,QAAA,EAAQ;0BAAS;4BAAAM,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAAQ,CAAC,KAAC,eAAA3D,OAAA;4BAAAwD,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAAK,CAAC,EAChC1C,eAAe,CAAC4B,WAAW,CAAC,GACzB,qBAAqB,GACrB,EAAAkB,qBAAA,GAAAhD,QAAQ,CAAC8B,WAAW,CAAC,cAAAkB,qBAAA,uBAArBA,qBAAA,CAAuB3B,KAAK,KAC5B,0CAA0C;wBAAA;0BAAAoB,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAC3C,CAAC;sBAAA;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACH,CACN;oBAAA,GAjDIlC,SAAS;sBAAA+B,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAkDX,CAAC;kBAEV,CAAC;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACC,CAAC;cAAA,GAjEH,GAAGnC,YAAY,cAAc;gBAAAgC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAmE/B,CACN,eACD3D,OAAA;gBAEEmD,SAAS,EAAE,WACT,CAAChC,YAAY,GACT,EAAE,GACFA,YAAY,CAACK,YAAY,KAAKA,YAAY,IAC1CL,YAAY,CAACyB,UAAU,KAAKA,UAAU,GACtC,WAAW,GACX,UAAU,EACb;gBACHQ,OAAO,EAAGY,CAAC,IAAK;kBACdA,CAAC,CAACC,eAAe,CAAC,CAAC,CAAC,CAAC;kBACrB;kBACAhB,eAAe,CAACL,UAAU,EAAEpB,YAAY,CAAC;gBAC3C,CAAE;gBAAA0B,QAAA,gBAEFlD,OAAA;kBAAImD,SAAS,EAAC,eAAe;kBAAAD,QAAA,EAAExC,OAAO,CAACmD;gBAAW;kBAAAL,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eAItD3D,OAAA;kBAAKmD,SAAS,EAAC,OAAO;kBAAAD,QAAA,EACnBxC,OAAO,CAACoD,KAAK,CAAC5B,GAAG,CAAC,CAACS,IAAI,EAAElB,SAAS,KAAK;oBAAA,IAAA0C,sBAAA;oBACtC,MAAMtB,WAAW,GAAG,GAAGD,UAAU,IAAIpB,YAAY,IAAIC,SAAS,EAAE;oBAChE,oBACEzB,OAAA;sBAEEmD,SAAS,EAAC,MAAM;sBAChBC,OAAO,EAAGY,CAAC,IAAK;wBACdA,CAAC,CAACC,eAAe,CAAC,CAAC;wBACnB1C,iBAAiB,CACf,GAAGqB,UAAU,IAAIpB,YAAY,EAAE,EAC/BC,SACF,CAAC;sBACH,CAAE;sBAAAyB,QAAA,gBAEFlD,OAAA;wBAAKmD,SAAS,EAAC,aAAa;wBAAAD,QAAA,gBAC1BlD,OAAA;0BAAKmD,SAAS,EAAC,kBAAkB;0BAAAD,QAAA,EAC9BzB,SAAS,GAAG;wBAAC;0BAAA+B,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACX,CAAC,eACN3D,OAAA;0BAAKmD,SAAS,EAAC,WAAW;0BAAAD,QAAA,EAAEP,IAAI,CAACf;wBAAI;0BAAA4B,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAAM,CAAC,eAC5C3D,OAAA;0BACEmD,SAAS,EAAE,iBAAkB;0BAC7BC,OAAO,EAAGY,CAAC,IAAK;4BACdA,CAAC,CAACC,eAAe,CAAC,CAAC;4BACnBvB,qBAAqB,CACnBC,IAAI,EACJC,UAAU,EACVpB,YAAY,EACZC,SACF,CAAC;0BACH;wBAAE;0BAAA+B,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACE,CAAC;sBAAA;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACJ,CAAC,EAEL9C,aAAa,CACZ,GAAG+B,UAAU,IAAIpB,YAAY,IAAIC,SAAS,EAAE,CAC7C,iBACCzB,OAAA;wBAAKmD,SAAS,EAAC,cAAc;wBAAAD,QAAA,gBAC3BlD,OAAA;0BAAKmD,SAAS,EAAC,gBAAgB;0BAAAD,QAAA,gBAC7BlD,OAAA;4BAAAkD,QAAA,EAAQ;0BAAe;4BAAAM,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAAQ,CAAC,KAAC,eAAA3D,OAAA;4BAAAwD,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAAK,CAAC,EACtChB,IAAI,CAACuB,cAAc;wBAAA;0BAAAV,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACjB,CAAC,eACN3D,OAAA;0BAAKmD,SAAS,EAAC,gBAAgB;0BAAAD,QAAA,gBAC7BlD,OAAA;4BAAAkD,QAAA,EAAQ;0BAAK;4BAAAM,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAAQ,CAAC,KAAC,eAAA3D,OAAA;4BAAAwD,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAAK,CAAC,EAC5BhB,IAAI,CAACd,SAAS;wBAAA;0BAAA2B,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OACZ,CAAC,eACN3D,OAAA;0BAAKmD,SAAS,EAAC,gBAAgB;0BAAAD,QAAA,gBAC7BlD,OAAA;4BAAAkD,QAAA,EAAQ;0BAAS;4BAAAM,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAAQ,CAAC,KAAC,eAAA3D,OAAA;4BAAAwD,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAAK,CAAC,EAChC1C,eAAe,CAAC4B,WAAW,CAAC,GACzB,qBAAqB,GACrB,CAAAsB,sBAAA,GAAApD,QAAQ,CAAC8B,WAAW,CAAC,cAAAsB,sBAAA,eAArBA,sBAAA,CAAuB5B,MAAM,GAC7BxB,QAAQ,CAAC8B,WAAW,CAAC,CAClBuB,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;0BAAA,CACblC,GAAG,CAAC,CAACC,IAAI,EAAEkC,KAAK,kBACfrE,OAAA;4BAEEsE,KAAK,EAAE;8BAAEC,YAAY,EAAE;4BAAM,CAAE;4BAAArB,QAAA,gBAE/BlD,OAAA;8BAAAkD,QAAA,gBACElD,OAAA;gCAAAkD,QAAA,EAAQ;8BAAM;gCAAAM,QAAA,EAAAC,YAAA;gCAAAC,UAAA;gCAAAC,YAAA;8BAAA,OAAQ,CAAC,EAAC,GAAG,EAC1BxB,IAAI,CAACC,KAAK;4BAAA;8BAAAoB,QAAA,EAAAC,YAAA;8BAAAC,UAAA;8BAAAC,YAAA;4BAAA,OACR,CAAC,eACN3D,OAAA;8BAAAkD,QAAA,gBACElD,OAAA;gCAAAkD,QAAA,EAAQ;8BAAK;gCAAAM,QAAA,EAAAC,YAAA;gCAAAC,UAAA;gCAAAC,YAAA;8BAAA,OAAQ,CAAC,EAAC,GAAG,eAC1B3D,OAAA;gCACEwE,IAAI,EAAErC,IAAI,CAACE,IAAK;gCAChBoC,MAAM,EAAC,QAAQ;gCACfC,GAAG,EAAC,qBAAqB;gCAAAxB,QAAA,EAExBf,IAAI,CAACE;8BAAI;gCAAAmB,QAAA,EAAAC,YAAA;gCAAAC,UAAA;gCAAAC,YAAA;8BAAA,OACT,CAAC;4BAAA;8BAAAH,QAAA,EAAAC,YAAA;8BAAAC,UAAA;8BAAAC,YAAA;4BAAA,OACD,CAAC,eACN3D,OAAA;8BAAAkD,QAAA,gBACElD,OAAA;gCAAAkD,QAAA,EAAQ;8BAAQ;gCAAAM,QAAA,EAAAC,YAAA;gCAAAC,UAAA;gCAAAC,YAAA;8BAAA,OAAQ,CAAC,EAAC,GAAG,EAC5BxB,IAAI,CAACG,OAAO;4BAAA;8BAAAkB,QAAA,EAAAC,YAAA;8BAAAC,UAAA;8BAAAC,YAAA;4BAAA,OACV,CAAC;0BAAA,GApBDU,KAAK;4BAAAb,QAAA,EAAAC,YAAA;4BAAAC,UAAA;4BAAAC,YAAA;0BAAA,OAqBP,CACN,CAAC,GACJ,0CAA0C;wBAAA;0BAAAH,QAAA,EAAAC,YAAA;0BAAAC,UAAA;0BAAAC,YAAA;wBAAA,OAC3C,CAAC;sBAAA;wBAAAH,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OACH,CACN;oBAAA,GA5EIlC,SAAS;sBAAA+B,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OA6EX,CAAC;kBAEV,CAAC;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACC,CAAC;cAAA,GAxGHnC,YAAY;gBAAAgC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OA0Gd,CAAC;YAAA,eACN,CAAC;UAEP,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA,GA3MEhD,KAAK;QAAA6C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OA4MV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN3D,OAAA;MAAKmD,SAAS,EAAE,kBAAmB;MAAAD,QAAA,eACjClD,OAAA;QAAKmD,SAAS,EAAE,mBAAmB9B,YAAY,GAAG,EAAE,GAAG,QAAQ,EAAG;QAAA6B,QAAA,EAC/D7B,YAAY,iBAAIrB,OAAA;UAAAkD,QAAA,EAAG;QAAoC;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA,eACN,CAAC;AAEP,CAAC;AAACrD,EAAA,CA9SIH,QAAQ;AAAAwE,EAAA,GAARxE,QAAQ;AAgTd,eAAeA,QAAQ;AAAC,IAAAwE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}