{"ast":null,"code":"var _jsxFileName = \"/Users/huangjiashu/Desktop/AI Projects/doai/firstapp/frontend/src/components/InfiniteCanvas.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef } from 'react';\nimport * as PIXI from 'pixi.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InfiniteCanvas = () => {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    // Initialize PixiJS application\n    const app = new PIXI.Application();\n    (async () => {\n      await app.init({\n        width: window.innerWidth,\n        height: window.innerHeight,\n        backgroundColor: 0xffffff,\n        antialias: true\n      });\n    })();\n\n    // Append the PixiJS canvas to the DOM\n    const canvasContainer = canvasRef.current;\n    if (canvasContainer) {\n      canvasContainer.appendChild(app.canvas);\n    }\n\n    // Texts and Colors for the 9 Blocks\n    const texts = [\"Infinite\", \"Canvases\", \"Are\", \"Easy\", \"When\", \"You\", \"Know\", \"The\", \"Fundamentals\"];\n    const colors = [0xff6b6b, 0x6bffb5, 0x6bc6ff, 0xffb66b, 0x9d6bff, 0xfff56b, 0x6bffec, 0xc76bff, 0x6bfff0];\n    const blockSize = 200;\n\n    // Create 9 blocks with text annotations\n    texts.forEach((text, index) => {\n      const block = new PIXI.Container();\n      const background = new PIXI.Graphics();\n      const textElement = new PIXI.Text({\n        text: text,\n        style: {\n          fontSize: 24,\n          fill: 0x000000,\n          align: 'center'\n        }\n      });\n\n      // Calculate position based on index (3x3 grid)\n      const x = index % 3 * blockSize;\n      const y = Math.floor(index / 3) * blockSize;\n\n      // Draw the block background\n      background.rect(x, y, blockSize, blockSize);\n      background.fill(colors[index]);\n\n      // Center the text inside the block\n      textElement.anchor.set(0.5);\n      textElement.position.set(x + blockSize / 2, y + blockSize / 2);\n\n      // Add background and text to the block, and the block to the stage\n      block.addChild(background);\n      block.addChild(textElement);\n      app.stage.addChild(block);\n    });\n\n    // Clean up PixiJS application on component unmount\n    return () => {\n      app.destroy(true);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: canvasRef,\n    style: {\n      width: '100vw',\n      height: '100vh'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 10\n  }, this);\n};\n_s(InfiniteCanvas, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = InfiniteCanvas;\nexport default InfiniteCanvas;\nvar _c;\n$RefreshReg$(_c, \"InfiniteCanvas\");","map":{"version":3,"names":["useEffect","useRef","PIXI","jsxDEV","_jsxDEV","InfiniteCanvas","_s","canvasRef","app","Application","init","width","window","innerWidth","height","innerHeight","backgroundColor","antialias","canvasContainer","current","appendChild","canvas","texts","colors","blockSize","forEach","text","index","block","Container","background","Graphics","textElement","Text","style","fontSize","fill","align","x","y","Math","floor","rect","anchor","set","position","addChild","stage","destroy","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/huangjiashu/Desktop/AI Projects/doai/firstapp/frontend/src/components/InfiniteCanvas.js"],"sourcesContent":["import { useEffect, useRef } from 'react';\nimport * as PIXI from 'pixi.js';\n\nconst InfiniteCanvas = () => {\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    // Initialize PixiJS application\n    const app = new PIXI.Application();\n    (async () => {\n        await app.init({\n        width: window.innerWidth,\n        height: window.innerHeight,\n        backgroundColor: 0xffffff,\n        antialias: true,\n        });\n    })()\n\n    // Append the PixiJS canvas to the DOM\n    const canvasContainer = canvasRef.current;\n    if (canvasContainer) {\n      canvasContainer.appendChild(app.canvas);\n    }\n\n    // Texts and Colors for the 9 Blocks\n    const texts = [\n      \"Infinite\", \"Canvases\", \"Are\",\n      \"Easy\", \"When\", \"You\",\n      \"Know\", \"The\", \"Fundamentals\",\n    ];\n    const colors = [0xff6b6b, 0x6bffb5, 0x6bc6ff, 0xffb66b, 0x9d6bff, 0xfff56b, 0x6bffec, 0xc76bff, 0x6bfff0];\n    const blockSize = 200;\n\n    // Create 9 blocks with text annotations\n    texts.forEach((text, index) => {\n      const block = new PIXI.Container();\n      const background = new PIXI.Graphics();\n      const textElement = new PIXI.Text({text:text, \n        style:{\n        fontSize: 24,\n        fill: 0x000000,\n        align: 'center',\n      }});\n\n      // Calculate position based on index (3x3 grid)\n      const x = (index % 3) * blockSize;\n      const y = Math.floor(index / 3) * blockSize;\n\n      // Draw the block background\n      background.rect(x, y, blockSize, blockSize);\n      background.fill(colors[index]);\n\n      // Center the text inside the block\n      textElement.anchor.set(0.5);\n      textElement.position.set(x + blockSize / 2, y + blockSize / 2);\n\n      // Add background and text to the block, and the block to the stage\n      block.addChild(background);\n      block.addChild(textElement);\n      app.stage.addChild(block);\n    });\n\n    // Clean up PixiJS application on component unmount\n    return () => {\n      app.destroy(true);\n    };\n  }, []);\n\n  return <div ref={canvasRef} style={{ width: '100vw', height: '100vh' }} />;\n};\n\nexport default InfiniteCanvas;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}