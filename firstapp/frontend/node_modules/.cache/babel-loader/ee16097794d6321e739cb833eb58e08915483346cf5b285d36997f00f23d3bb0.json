{"ast":null,"code":"var _jsxFileName = \"/Users/huangjiashu/Desktop/AI Projects/doai/firstapp/frontend/src/components/Workflow.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Step from \"./Step\";\nimport ModalContainer from \"./ModalContainer\";\nimport \"../styles/Workflow.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Workflow = ({\n  workflow,\n  phaseDict\n}) => {\n  _s();\n  const groupedByPhase = workflow.reduce((acc, subtask) => {\n    acc[subtask.phase] = acc[subtask.phase] || [];\n    acc[subtask.phase].push(subtask);\n    return acc;\n  }, {});\n\n  // const [expandedSubtasks, setExpandedSubtasks] = useState({});\n  const [expandedSteps, setExpandedSteps] = useState({});\n  const [evidence, setEvidence] = useState({}); // Store evidence for each step\n  const [loadingEvidence, setLoadingEvidence] = useState({});\n  const [selectedStep, setSelectedStep] = useState(null); // Track selected step\n  const [modalContent, setModalContent] = useState(null);\n\n  // const toggleSubtask = (index) => {\n  //   setExpandedSubtasks((prev) => ({\n  //     ...prev,\n  //     [index]: !prev[index],\n  //   }));\n  // };\n\n  const toggleStepDetails = (subtaskIndex, stepIndex) => {\n    setExpandedSteps(prev => ({\n      ...prev,\n      [`${subtaskIndex}-${stepIndex}`]: !prev[`${subtaskIndex}-${stepIndex}`]\n    }));\n  };\n  const callApiForEvidence = async (name, execution) => {\n    try {\n      const response = await axios.post(\"http://127.0.0.1:8000/api/process_step\", {\n        name: name,\n        execution: execution\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const evidence = response.data.evidence.map(item => ({\n        title: item.title,\n        link: item.link,\n        snippet: item.snippet\n      }));\n      return evidence.length > 0 ? evidence // Assuming you want the first evidence item\n      : {\n        title: \"No evidence found.\",\n        link: \"\",\n        snippet: \"\"\n      };\n    } catch (error) {\n      console.error(\"Error calling API:\", error);\n      return {\n        title: \"Error retrieving evidence.\",\n        link: \"\",\n        snippet: \"\"\n      };\n    }\n  };\n  const handleRoleCircleClick = async (step, phaseIndex, subtaskIndex, stepIndex) => {\n    const evidenceKey = `${phaseIndex}-${subtaskIndex}-${stepIndex}`;\n\n    // Show loading modal\n    setModalContent(/*#__PURE__*/_jsxDEV(ModalContainer, {\n      isLoading: true,\n      step: step,\n      evidence: [],\n      classification: step.classification\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this));\n\n    // Fetch evidence data\n    const evidenceItem = await callApiForEvidence(step.name, step.execution);\n    setEvidence(prev => ({\n      ...prev,\n      [evidenceKey]: evidenceItem\n    }));\n    setLoadingEvidence(prev => ({\n      ...prev,\n      [evidenceKey]: false\n    }));\n\n    // Update modal with evidence data\n    setModalContent(/*#__PURE__*/_jsxDEV(ModalContainer, {\n      isLoading: false,\n      step: step,\n      evidence: evidence[evidenceKey] || [],\n      classification: step.classification\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this));\n  };\n  const resetSelection = () => {\n    setSelectedStep(null);\n    setModalContent(null);\n  };\n  const handleStepClick = (phaseIndex, subtaskIndex) => {\n    setSelectedStep({\n      phaseIndex,\n      subtaskIndex\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"workflow-container\",\n      onClick: resetSelection,\n      children: Object.entries(groupedByPhase).map(([phase, subtasks], phaseIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `phase-row`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `\"phase-label-container\"  ${selectedStep ? \"faded-out\" : \"\"}`,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"phase-label-text\",\n            children: `PHASE ${phaseIndex + 1} - ${phaseDict[phase] || `Phase ${phase}`}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `subtasks-wrapper `,\n          children: subtasks.map((subtask, subtaskIndex) => {\n            const isSelected = selectedStep && selectedStep.subtaskIndex === subtaskIndex && selectedStep.phaseIndex === phaseIndex;\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [isSelected && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"subtask-placeholder\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  className: \"subtask-title\",\n                  children: subtask.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"steps\",\n                  children: subtask.steps.map((step, stepIndex) => {\n                    var _evidence$evidenceKey;\n                    const evidenceKey = `${phaseIndex}-${subtaskIndex}-${stepIndex}`;\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"step\",\n                      onClick: e => {\n                        e.stopPropagation();\n                        toggleStepDetails(`${phaseIndex}-${subtaskIndex}`, stepIndex);\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"step-header\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"step-indexCircle\",\n                          children: stepIndex + 1\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 159,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"step-name\",\n                          children: step.name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 162,\n                          columnNumber: 37\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: `step-roleCircle`,\n                          onClick: e => {\n                            e.stopPropagation();\n                            handleRoleCircleClick(step, phaseIndex, subtaskIndex, stepIndex);\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 163,\n                          columnNumber: 37\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 158,\n                        columnNumber: 35\n                      }, this), expandedSteps[`${phaseIndex}-${subtaskIndex}-${stepIndex}`] && /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"step-details\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"step-attribute\",\n                          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                            children: \"Classification:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 182,\n                            columnNumber: 41\n                          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 182,\n                            columnNumber: 74\n                          }, this), step.classification]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 181,\n                          columnNumber: 39\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"step-attribute\",\n                          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                            children: \"Role:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 186,\n                            columnNumber: 41\n                          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 186,\n                            columnNumber: 64\n                          }, this), step.execution]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 185,\n                          columnNumber: 39\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"step-attribute\",\n                          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                            children: \"Evidence:\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 190,\n                            columnNumber: 41\n                          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 190,\n                            columnNumber: 68\n                          }, this), loadingEvidence[evidenceKey] ? \"Loading evidence...\" : ((_evidence$evidenceKey = evidence[evidenceKey]) === null || _evidence$evidenceKey === void 0 ? void 0 : _evidence$evidenceKey.title) || \"Click the role circle to fetch evidence.\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 189,\n                          columnNumber: 39\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 180,\n                        columnNumber: 37\n                      }, this)]\n                    }, stepIndex, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 147,\n                      columnNumber: 33\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 27\n                }, this)]\n              }, `${subtaskIndex}-placeholder`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `subtask ${!selectedStep ? \"\" : selectedStep.subtaskIndex !== subtaskIndex || selectedStep.phaseIndex !== phaseIndex ? \"faded-out\" : \"selected\"}`,\n                onClick: e => {\n                  e.stopPropagation(); // Prevent reset on subtask click\n                  // toggleSubtask(`${phaseIndex}-${subtaskIndex}`);\n                  handleStepClick(phaseIndex, subtaskIndex);\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  className: \"subtask-title\",\n                  children: subtask.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"steps\",\n                  children: subtask.steps.map((step, stepIndex) => {\n                    const evidenceKey = `${phaseIndex}-${subtaskIndex}-${stepIndex}`;\n                    return /*#__PURE__*/_jsxDEV(Step, {\n                      step: {\n                        ...step,\n                        index: stepIndex\n                      } // Include step index\n                      ,\n                      evidenceKey: evidenceKey,\n                      expanded: expandedSteps[`${phaseIndex}-${subtaskIndex}-${stepIndex}`],\n                      onToggle: e => {\n                        e.stopPropagation();\n                        toggleStepDetails(`${phaseIndex}-${subtaskIndex}`, stepIndex);\n                      },\n                      onRoleCircleClick: () => handleRoleCircleClick(step, phaseIndex, subtaskIndex, stepIndex),\n                      evidence: evidence[evidenceKey],\n                      loading: loadingEvidence[evidenceKey]\n                    }, stepIndex, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 229,\n                      columnNumber: 31\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 25\n                }, this)]\n              }, subtaskIndex, true, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)]\n      }, phase, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"parent-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `modal-container ${modalContent ? \"\" : \"hidden\"}`,\n        children: modalContent || /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Click a role circle to view details.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 28\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Workflow, \"FuqO3rajH0AEw6ZwKC9r3B3agds=\");\n_c = Workflow;\nexport default Workflow;\nvar _c;\n$RefreshReg$(_c, \"Workflow\");","map":{"version":3,"names":["React","useState","axios","Step","ModalContainer","jsxDEV","_jsxDEV","Fragment","_Fragment","Workflow","workflow","phaseDict","_s","groupedByPhase","reduce","acc","subtask","phase","push","expandedSteps","setExpandedSteps","evidence","setEvidence","loadingEvidence","setLoadingEvidence","selectedStep","setSelectedStep","modalContent","setModalContent","toggleStepDetails","subtaskIndex","stepIndex","prev","callApiForEvidence","name","execution","response","post","headers","data","map","item","title","link","snippet","length","error","console","handleRoleCircleClick","step","phaseIndex","evidenceKey","isLoading","classification","fileName","_jsxFileName","lineNumber","columnNumber","evidenceItem","resetSelection","handleStepClick","children","className","onClick","Object","entries","subtasks","isSelected","description","steps","_evidence$evidenceKey","e","stopPropagation","index","expanded","onToggle","onRoleCircleClick","loading","_c","$RefreshReg$"],"sources":["/Users/huangjiashu/Desktop/AI Projects/doai/firstapp/frontend/src/components/Workflow.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport Step from \"./Step\";\nimport ModalContainer from \"./ModalContainer\";\nimport \"../styles/Workflow.css\";\n\nconst Workflow = ({ workflow, phaseDict }) => {\n  const groupedByPhase = workflow.reduce((acc, subtask) => {\n    acc[subtask.phase] = acc[subtask.phase] || [];\n    acc[subtask.phase].push(subtask);\n    return acc;\n  }, {});\n\n  // const [expandedSubtasks, setExpandedSubtasks] = useState({});\n  const [expandedSteps, setExpandedSteps] = useState({});\n  const [evidence, setEvidence] = useState({}); // Store evidence for each step\n  const [loadingEvidence, setLoadingEvidence] = useState({});\n  const [selectedStep, setSelectedStep] = useState(null); // Track selected step\n  const [modalContent, setModalContent] = useState(null);\n\n  // const toggleSubtask = (index) => {\n  //   setExpandedSubtasks((prev) => ({\n  //     ...prev,\n  //     [index]: !prev[index],\n  //   }));\n  // };\n\n  const toggleStepDetails = (subtaskIndex, stepIndex) => {\n    setExpandedSteps((prev) => ({\n      ...prev,\n      [`${subtaskIndex}-${stepIndex}`]: !prev[`${subtaskIndex}-${stepIndex}`],\n    }));\n  };\n\n  const callApiForEvidence = async (name, execution) => {\n    try {\n      const response = await axios.post(\n        \"http://127.0.0.1:8000/api/process_step\",\n        { name: name, execution: execution },\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      const evidence = response.data.evidence.map((item) => ({\n        title: item.title,\n        link: item.link,\n        snippet: item.snippet,\n      }));\n\n      return evidence.length > 0\n        ? evidence // Assuming you want the first evidence item\n        : { title: \"No evidence found.\", link: \"\", snippet: \"\" };\n    } catch (error) {\n      console.error(\"Error calling API:\", error);\n      return { title: \"Error retrieving evidence.\", link: \"\", snippet: \"\" };\n    }\n  };\n\n  const handleRoleCircleClick = async (\n    step,\n    phaseIndex,\n    subtaskIndex,\n    stepIndex\n  ) => {\n    const evidenceKey = `${phaseIndex}-${subtaskIndex}-${stepIndex}`;\n\n    // Show loading modal\n    setModalContent(\n      <ModalContainer\n        isLoading={true}\n        step={step}\n        evidence={[]}\n        classification={step.classification}\n      />\n    );\n\n    // Fetch evidence data\n    const evidenceItem = await callApiForEvidence(step.name, step.execution);\n    setEvidence((prev) => ({\n      ...prev,\n      [evidenceKey]: evidenceItem,\n    }));\n\n    setLoadingEvidence((prev) => ({ ...prev, [evidenceKey]: false }));\n\n    // Update modal with evidence data\n    setModalContent(\n      <ModalContainer\n        isLoading={false}\n        step={step}\n        evidence={evidence[evidenceKey] || []}\n        classification={step.classification}\n      />\n    );\n  };\n\n  const resetSelection = () => {\n    setSelectedStep(null);\n    setModalContent(null);\n  };\n\n  const handleStepClick = (phaseIndex, subtaskIndex) => {\n    setSelectedStep({ phaseIndex, subtaskIndex });\n  };\n\n  return (\n    <>\n      <div className=\"workflow-container\" onClick={resetSelection}>\n        {Object.entries(groupedByPhase).map(([phase, subtasks], phaseIndex) => (\n          <div key={phase} className={`phase-row`}>\n            <div\n              className={`\"phase-label-container\"  ${\n                selectedStep ? \"faded-out\" : \"\"\n              }`}\n            >\n              <span className=\"phase-label-text\">\n                {`PHASE ${phaseIndex + 1} - ${\n                  phaseDict[phase] || `Phase ${phase}`\n                }`}\n              </span>\n            </div>\n            <div className={`subtasks-wrapper `}>\n              {subtasks.map((subtask, subtaskIndex) => {\n                const isSelected =\n                  selectedStep &&\n                  selectedStep.subtaskIndex === subtaskIndex &&\n                  selectedStep.phaseIndex === phaseIndex;\n\n                return (\n                  <>\n                    {isSelected && (\n                      <div\n                        key={`${subtaskIndex}-placeholder`}\n                        className=\"subtask-placeholder\"\n                      >\n                        <h2 className=\"subtask-title\">{subtask.description}</h2>\n\n                        {/* {expandedSubtasks[`${phaseIndex}-${subtaskIndex}`] && ( */}\n                        {\n                          <div className=\"steps\">\n                            {subtask.steps.map((step, stepIndex) => {\n                              const evidenceKey = `${phaseIndex}-${subtaskIndex}-${stepIndex}`;\n                              return (\n                                <div\n                                  key={stepIndex}\n                                  className=\"step\"\n                                  onClick={(e) => {\n                                    e.stopPropagation();\n                                    toggleStepDetails(\n                                      `${phaseIndex}-${subtaskIndex}`,\n                                      stepIndex\n                                    );\n                                  }}\n                                >\n                                  <div className=\"step-header\">\n                                    <div className=\"step-indexCircle\">\n                                      {stepIndex + 1}\n                                    </div>\n                                    <div className=\"step-name\">{step.name}</div>\n                                    <div\n                                      className={`step-roleCircle`}\n                                      onClick={(e) => {\n                                        e.stopPropagation();\n                                        handleRoleCircleClick(\n                                          step,\n                                          phaseIndex,\n                                          subtaskIndex,\n                                          stepIndex\n                                        );\n                                      }}\n                                    ></div>\n                                  </div>\n\n                                  {expandedSteps[\n                                    `${phaseIndex}-${subtaskIndex}-${stepIndex}`\n                                  ] && (\n                                    <div className=\"step-details\">\n                                      <div className=\"step-attribute\">\n                                        <strong>Classification:</strong> <br />\n                                        {step.classification}\n                                      </div>\n                                      <div className=\"step-attribute\">\n                                        <strong>Role:</strong> <br />\n                                        {step.execution}\n                                      </div>\n                                      <div className=\"step-attribute\">\n                                        <strong>Evidence:</strong> <br />\n                                        {loadingEvidence[evidenceKey]\n                                          ? \"Loading evidence...\"\n                                          : evidence[evidenceKey]?.title ||\n                                            \"Click the role circle to fetch evidence.\"}\n                                      </div>\n                                    </div>\n                                  )}\n                                </div>\n                              );\n                            })}\n                          </div>\n                        }\n                      </div>\n                    )}\n                    <div\n                      key={subtaskIndex}\n                      className={`subtask ${\n                        !selectedStep\n                          ? \"\"\n                          : selectedStep.subtaskIndex !== subtaskIndex ||\n                            selectedStep.phaseIndex !== phaseIndex\n                          ? \"faded-out\"\n                          : \"selected\"\n                      }`}\n                      onClick={(e) => {\n                        e.stopPropagation(); // Prevent reset on subtask click\n                        // toggleSubtask(`${phaseIndex}-${subtaskIndex}`);\n                        handleStepClick(phaseIndex, subtaskIndex);\n                      }}\n                    >\n                      <h2 className=\"subtask-title\">{subtask.description}</h2>\n\n                      {/* {expandedSubtasks[`${phaseIndex}-${subtaskIndex}`] && ( */}\n                      {\n                        <div className=\"steps\">\n                          {subtask.steps.map((step, stepIndex) => {\n                            const evidenceKey = `${phaseIndex}-${subtaskIndex}-${stepIndex}`;\n                            return (\n                              <Step\n                                key={stepIndex}\n                                step={{ ...step, index: stepIndex }} // Include step index\n                                evidenceKey={evidenceKey}\n                                expanded={\n                                  expandedSteps[\n                                    `${phaseIndex}-${subtaskIndex}-${stepIndex}`\n                                  ]\n                                }\n                                onToggle={(e) => {\n                                  e.stopPropagation();\n                                  toggleStepDetails(\n                                    `${phaseIndex}-${subtaskIndex}`,\n                                    stepIndex\n                                  );\n                                }}\n                                onRoleCircleClick={() =>\n                                  handleRoleCircleClick(\n                                    step,\n                                    phaseIndex,\n                                    subtaskIndex,\n                                    stepIndex\n                                  )\n                                }\n                                evidence={evidence[evidenceKey]}\n                                loading={loadingEvidence[evidenceKey]}\n                              />\n                            );\n                          })}\n                        </div>\n                      }\n                    </div>\n                  </>\n                );\n              })}\n            </div>\n          </div>\n        ))}\n      </div>\n      <div className={\"parent-container\"}>\n        <div className={`modal-container ${modalContent ? \"\" : \"hidden\"}`}>\n          {modalContent || <p>Click a role circle to view details.</p>}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Workflow;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}