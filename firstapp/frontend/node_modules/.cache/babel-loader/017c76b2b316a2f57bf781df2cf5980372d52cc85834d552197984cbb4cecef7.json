{"ast":null,"code":"\"use strict\";\n\nclass GlParticleContainerAdaptor {\n  execute(particleContainerPop, container) {\n    const state = particleContainerPop.state;\n    const renderer = particleContainerPop.renderer;\n    const shader = container.shader || particleContainerPop.defaultShader;\n    shader.resources.uTexture = container.texture._source;\n    shader.resources.uniforms = particleContainerPop.localUniforms;\n    const gl = renderer.gl;\n    const buffer = particleContainerPop.getBuffers(container);\n    renderer.shader.bind(shader);\n    renderer.state.set(state);\n    renderer.geometry.bind(buffer.geometry, shader.glProgram);\n    const byteSize = buffer.geometry.indexBuffer.data.BYTES_PER_ELEMENT;\n    const glType = byteSize === 2 ? gl.UNSIGNED_SHORT : gl.UNSIGNED_INT;\n    gl.drawElements(gl.TRIANGLES, container.particleChildren.length * 6, glType, 0);\n  }\n}\nexport { GlParticleContainerAdaptor };","map":{"version":3,"names":["GlParticleContainerAdaptor","execute","particleContainerPop","container","state","renderer","shader","defaultShader","resources","uTexture","texture","_source","uniforms","localUniforms","gl","buffer","getBuffers","bind","set","geometry","glProgram","byteSize","indexBuffer","data","BYTES_PER_ELEMENT","glType","UNSIGNED_SHORT","UNSIGNED_INT","drawElements","TRIANGLES","particleChildren","length"],"sources":["/Users/huangjiashu/Desktop/AI Projects/node_modules/pixi.js/src/scene/particle-container/gl/GlParticleContainerAdaptor.ts"],"sourcesContent":["import type { WebGLRenderer } from '../../../rendering/renderers/gl/WebGLRenderer';\nimport type { ParticleContainer } from '../shared/ParticleContainer';\nimport type { ParticleContainerAdaptor, ParticleContainerPipe } from '../shared/ParticleContainerPipe';\n\nexport class GlParticleContainerAdaptor implements ParticleContainerAdaptor\n{\n    public execute(particleContainerPop: ParticleContainerPipe, container: ParticleContainer)\n    {\n        const state = particleContainerPop.state;\n        const renderer = particleContainerPop.renderer as WebGLRenderer;\n        const shader = container.shader || particleContainerPop.defaultShader;\n\n        shader.resources.uTexture = container.texture._source;\n        shader.resources.uniforms = particleContainerPop.localUniforms;\n\n        const gl = renderer.gl;\n\n        const buffer = particleContainerPop.getBuffers(container);\n\n        // now lets upload and render the buffers..\n        renderer.shader.bind(shader);\n        renderer.state.set(state);\n        renderer.geometry.bind(buffer.geometry, shader.glProgram);\n\n        const byteSize = buffer.geometry.indexBuffer.data.BYTES_PER_ELEMENT;\n        const glType = byteSize === 2 ? gl.UNSIGNED_SHORT : gl.UNSIGNED_INT;\n\n        gl.drawElements(gl.TRIANGLES, container.particleChildren.length * 6, glType, 0);\n    }\n}\n"],"mappings":";;AAIO,MAAMA,0BACb;EACWC,QAAQC,oBAAA,EAA6CC,SAC5D;IACI,MAAMC,KAAA,GAAQF,oBAAqB,CAAAE,KAAA;IACnC,MAAMC,QAAA,GAAWH,oBAAqB,CAAAG,QAAA;IAChC,MAAAC,MAAA,GAASH,SAAU,CAAAG,MAAA,IAAUJ,oBAAqB,CAAAK,aAAA;IAEjDD,MAAA,CAAAE,SAAA,CAAUC,QAAW,GAAAN,SAAA,CAAUO,OAAQ,CAAAC,OAAA;IACvCL,MAAA,CAAAE,SAAA,CAAUI,QAAA,GAAWV,oBAAqB,CAAAW,aAAA;IAEjD,MAAMC,EAAA,GAAKT,QAAS,CAAAS,EAAA;IAEd,MAAAC,MAAA,GAASb,oBAAqB,CAAAc,UAAA,CAAWb,SAAS;IAG/CE,QAAA,CAAAC,MAAA,CAAOW,IAAA,CAAKX,MAAM;IAClBD,QAAA,CAAAD,KAAA,CAAMc,GAAA,CAAId,KAAK;IACxBC,QAAA,CAASc,QAAS,CAAAF,IAAA,CAAKF,MAAO,CAAAI,QAAA,EAAUb,MAAA,CAAOc,SAAS;IAExD,MAAMC,QAAW,GAAAN,MAAA,CAAOI,QAAS,CAAAG,WAAA,CAAYC,IAAK,CAAAC,iBAAA;IAClD,MAAMC,MAAS,GAAAJ,QAAA,KAAa,CAAI,GAAAP,EAAA,CAAGY,cAAA,GAAiBZ,EAAG,CAAAa,YAAA;IAEpDb,EAAA,CAAAc,YAAA,CAAad,EAAA,CAAGe,SAAW,EAAA1B,SAAA,CAAU2B,gBAAA,CAAiBC,MAAS,MAAGN,MAAA,EAAQ,CAAC;EAAA;AAEtF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}