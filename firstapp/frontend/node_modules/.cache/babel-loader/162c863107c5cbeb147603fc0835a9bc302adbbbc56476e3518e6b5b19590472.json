{"ast":null,"code":"import { getAttributeInfoFromFormat } from '../../../../rendering/renderers/shared/geometry/utils/getAttributeInfoFromFormat.mjs';\n\"use strict\";\nfunction generateParticleUpdateFunction(properties) {\n  return {\n    dynamicUpdate: generateUpdateFunction(properties, true),\n    staticUpdate: generateUpdateFunction(properties, false)\n  };\n}\nfunction generateUpdateFunction(properties, dynamic) {\n  const funcFragments = [];\n  funcFragments.push(`\n      \n        var index = 0;\n\n        for (let i = 0; i < ps.length; ++i)\n        {\n            const p = ps[i];\n\n            `);\n  let offset = 0;\n  for (const i in properties) {\n    const property = properties[i];\n    if (dynamic !== property.dynamic) continue;\n    funcFragments.push(`offset = index + ${offset}`);\n    funcFragments.push(property.code);\n    const attributeInfo = getAttributeInfoFromFormat(property.format);\n    offset += attributeInfo.stride / 4;\n  }\n  funcFragments.push(`\n            index += stride * 4;\n        }\n    `);\n  funcFragments.unshift(`\n        var stride = ${offset};\n    `);\n  const functionSource = funcFragments.join(\"\\n\");\n  return new Function(\"ps\", \"f32v\", \"u32v\", functionSource);\n}\nexport { generateParticleUpdateFunction };","map":{"version":3,"names":["generateParticleUpdateFunction","properties","dynamicUpdate","generateUpdateFunction","staticUpdate","dynamic","funcFragments","push","offset","i","property","code","attributeInfo","getAttributeInfoFromFormat","format","stride","unshift","functionSource","join","Function"],"sources":["/Users/huangjiashu/Desktop/AI Projects/node_modules/pixi.js/src/scene/particle-container/shared/utils/generateParticleUpdateFunction.ts"],"sourcesContent":["import {\n    getAttributeInfoFromFormat\n} from '../../../../rendering/renderers/shared/geometry/utils/getAttributeInfoFromFormat';\n\nimport type { IParticle } from '../Particle';\nimport type { ParticleRendererProperty } from '../particleData';\n\n// TODO rename to update function\nexport type ParticleUpdateFunction = (ps: IParticle[], f32v: Float32Array, u32v: Uint32Array) => void;\n\nexport function generateParticleUpdateFunction(properties: Record<string, ParticleRendererProperty>)\n{\n    return {\n        dynamicUpdate: generateUpdateFunction(properties, true),\n        staticUpdate: generateUpdateFunction(properties, false),\n    };\n}\n\nfunction generateUpdateFunction(\n    properties: Record<string, ParticleRendererProperty>,\n    dynamic: boolean\n): ParticleUpdateFunction\n{\n    const funcFragments: string[] = [];\n\n    funcFragments.push(`\n      \n        var index = 0;\n\n        for (let i = 0; i < ps.length; ++i)\n        {\n            const p = ps[i];\n\n            `);\n\n    let offset = 0;\n\n    for (const i in properties)\n    {\n        const property = properties[i];\n\n        if (dynamic !== property.dynamic) continue;\n\n        funcFragments.push(`offset = index + ${offset}`);\n\n        funcFragments.push(property.code);\n\n        const attributeInfo = getAttributeInfoFromFormat(property.format);\n\n        offset += attributeInfo.stride / 4;\n    }\n\n    funcFragments.push(`\n            index += stride * 4;\n        }\n    `);\n\n    // add to the front..\n    funcFragments.unshift(`\n        var stride = ${offset};\n    `);\n\n    const functionSource = funcFragments.join('\\n');\n\n    // eslint-disable-next-line no-new-func\n    return new Function('ps', 'f32v', 'u32v', functionSource) as ParticleUpdateFunction;\n}\n"],"mappings":";;AAUO,SAASA,+BAA+BC,UAC/C;EACW;IACHC,aAAA,EAAeC,sBAAuB,CAAAF,UAAA,EAAY,IAAI;IACtDG,YAAA,EAAcD,sBAAuB,CAAAF,UAAA,EAAY,KAAK;EAAA,CAC1D;AACJ;AAEA,SAASE,uBACLF,UAAA,EACAI,OAEJ;EACI,MAAMC,aAAA,GAA0B,EAAC;EAEjCA,aAAA,CAAcC,IAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAQV;EAET,IAAIC,MAAS;EAEb,WAAWC,CAAA,IAAKR,UAChB;IACU,MAAAS,QAAA,GAAWT,UAAA,CAAWQ,CAAC;IAE7B,IAAIJ,OAAA,KAAYK,QAAS,CAAAL,OAAA,EAAS;IAEpBC,aAAA,CAAAC,IAAA,CAAK,oBAAoBC,MAAM,EAAE;IAEjCF,aAAA,CAAAC,IAAA,CAAKG,QAAA,CAASC,IAAI;IAE1B,MAAAC,aAAA,GAAgBC,0BAA2B,CAAAH,QAAA,CAASI,MAAM;IAEhEN,MAAA,IAAUI,aAAA,CAAcG,MAAS;EAAA;EAGrCT,aAAA,CAAcC,IAAK;AAAA;AAAA;AAAA,KAGlB;EAGDD,aAAA,CAAcU,OAAQ;AAAA,uBACHR,MAAM;AAAA,KACxB;EAEK,MAAAS,cAAA,GAAiBX,aAAc,CAAAY,IAAA,CAAK,IAAI;EAG9C,OAAO,IAAIC,QAAA,CAAS,IAAM,UAAQ,QAAQF,cAAc;AAC5D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}