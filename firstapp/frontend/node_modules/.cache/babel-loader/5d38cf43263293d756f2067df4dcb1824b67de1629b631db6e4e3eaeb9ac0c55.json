{"ast":null,"code":"var _jsxFileName = \"/Users/huangjiashu/Desktop/AI Projects/doai/firstapp/frontend/src/components/Workflow.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Workflow = ({\n  workflow\n}) => {\n  _s();\n  // State to track which subtasks are expanded (open)\n  const [expandedSubtasks, setExpandedSubtasks] = useState({});\n\n  // Toggle the expanded state of a subtask\n  const toggleSubtask = index => {\n    setExpandedSubtasks(prev => ({\n      ...prev,\n      [index]: !prev[index] // Toggle the specific subtask's state\n    }));\n  };\n  const [selectedStep, setSelectedStep] = useState(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"workflow-container\",\n    children: [workflow.map((subtask, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"subtask\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        onClick: () => toggleSubtask(index),\n        className: \"subtask-title\",\n        children: subtask.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"subtask-description\",\n        children: subtask.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), expandedSubtasks[index] && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"steps\",\n        children: subtask.steps.map((step, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"step\",\n          onClick: () => setSelectedStep(step),\n          children: step\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)), selectedStep && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"side-window\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Step Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: selectedStep\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedStep(null),\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(Workflow, \"7dgKLRdnhG1A59Lh28vu853KQyg=\");\n_c = Workflow;\nexport default Workflow;\nvar _c;\n$RefreshReg$(_c, \"Workflow\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Workflow","workflow","_s","expandedSubtasks","setExpandedSubtasks","toggleSubtask","index","prev","selectedStep","setSelectedStep","className","children","map","subtask","onClick","name","fileName","_jsxFileName","lineNumber","columnNumber","description","steps","step","i","_c","$RefreshReg$"],"sources":["/Users/huangjiashu/Desktop/AI Projects/doai/firstapp/frontend/src/components/Workflow.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst Workflow = ({ workflow }) => {\n  // State to track which subtasks are expanded (open)\n  const [expandedSubtasks, setExpandedSubtasks] = useState({});\n\n  // Toggle the expanded state of a subtask\n  const toggleSubtask = (index) => {\n    setExpandedSubtasks((prev) => ({\n      ...prev,\n      [index]: !prev[index], // Toggle the specific subtask's state\n    }));\n  };\n\n  const [selectedStep, setSelectedStep] = useState(null);\n\n  return (\n    <div className=\"workflow-container\">\n      {workflow.map((subtask, index) => (\n        <div key={index} className=\"subtask\">\n          {/* Subtask Title (clickable to toggle) */}\n          <h2 onClick={() => toggleSubtask(index)} className=\"subtask-title\">\n            {subtask.name}\n          </h2>\n          <p className=\"subtask-description\">{subtask.description}</p>\n\n          {/* Conditionally render steps if the subtask is expanded */}\n          {expandedSubtasks[index] && (\n            <div className=\"steps\">\n              {subtask.steps.map((step, i) => (\n                <div\n                  key={i}\n                  className=\"step\"\n                  onClick={() => setSelectedStep(step)}\n                >\n                  {step}\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      ))}\n\n      {/* Side window for selected step */}\n      {selectedStep && (\n        <div className=\"side-window\">\n          <h3>Step Details</h3>\n          <p>{selectedStep}</p>\n          <button onClick={() => setSelectedStep(null)}>Close</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Workflow;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACjC;EACA,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAE5D;EACA,MAAMQ,aAAa,GAAIC,KAAK,IAAK;IAC/BF,mBAAmB,CAAEG,IAAI,KAAM;MAC7B,GAAGA,IAAI;MACP,CAACD,KAAK,GAAG,CAACC,IAAI,CAACD,KAAK,CAAC,CAAE;IACzB,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAM,CAACE,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAEtD,oBACEE,OAAA;IAAKW,SAAS,EAAC,oBAAoB;IAAAC,QAAA,GAChCV,QAAQ,CAACW,GAAG,CAAC,CAACC,OAAO,EAAEP,KAAK,kBAC3BP,OAAA;MAAiBW,SAAS,EAAC,SAAS;MAAAC,QAAA,gBAElCZ,OAAA;QAAIe,OAAO,EAAEA,CAAA,KAAMT,aAAa,CAACC,KAAK,CAAE;QAACI,SAAS,EAAC,eAAe;QAAAC,QAAA,EAC/DE,OAAO,CAACE;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC,eACLpB,OAAA;QAAGW,SAAS,EAAC,qBAAqB;QAAAC,QAAA,EAAEE,OAAO,CAACO;MAAW;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAG3DhB,gBAAgB,CAACG,KAAK,CAAC,iBACtBP,OAAA;QAAKW,SAAS,EAAC,OAAO;QAAAC,QAAA,EACnBE,OAAO,CAACQ,KAAK,CAACT,GAAG,CAAC,CAACU,IAAI,EAAEC,CAAC,kBACzBxB,OAAA;UAEEW,SAAS,EAAC,MAAM;UAChBI,OAAO,EAAEA,CAAA,KAAML,eAAe,CAACa,IAAI,CAAE;UAAAX,QAAA,EAEpCW;QAAI,GAJAC,CAAC;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKH,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CACN;IAAA,GApBOb,KAAK;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAqBV,CACN,CAAC,EAGDX,YAAY,iBACXT,OAAA;MAAKW,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1BZ,OAAA;QAAAY,QAAA,EAAI;MAAY;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrBpB,OAAA;QAAAY,QAAA,EAAIH;MAAY;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrBpB,OAAA;QAAQe,OAAO,EAAEA,CAAA,KAAML,eAAe,CAAC,IAAI,CAAE;QAAAE,QAAA,EAAC;MAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzD,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACjB,EAAA,CAnDIF,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AAqDd,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}